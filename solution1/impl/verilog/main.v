// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="main,hls_ip_2017_4_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.268000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=0,HLS_SYN_DSP=1,HLS_SYN_FF=539,HLS_SYN_LUT=1003}" *)

module main (
        s_axi_CONTROL_BUS_AWVALID,
        s_axi_CONTROL_BUS_AWREADY,
        s_axi_CONTROL_BUS_AWADDR,
        s_axi_CONTROL_BUS_WVALID,
        s_axi_CONTROL_BUS_WREADY,
        s_axi_CONTROL_BUS_WDATA,
        s_axi_CONTROL_BUS_WSTRB,
        s_axi_CONTROL_BUS_ARVALID,
        s_axi_CONTROL_BUS_ARREADY,
        s_axi_CONTROL_BUS_ARADDR,
        s_axi_CONTROL_BUS_RVALID,
        s_axi_CONTROL_BUS_RREADY,
        s_axi_CONTROL_BUS_RDATA,
        s_axi_CONTROL_BUS_RRESP,
        s_axi_CONTROL_BUS_BVALID,
        s_axi_CONTROL_BUS_BREADY,
        s_axi_CONTROL_BUS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt
);

parameter    C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;

parameter C_S_AXI_CONTROL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_CONTROL_BUS_AWVALID;
output   s_axi_CONTROL_BUS_AWREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_AWADDR;
input   s_axi_CONTROL_BUS_WVALID;
output   s_axi_CONTROL_BUS_WREADY;
input  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_WDATA;
input  [C_S_AXI_CONTROL_BUS_WSTRB_WIDTH - 1:0] s_axi_CONTROL_BUS_WSTRB;
input   s_axi_CONTROL_BUS_ARVALID;
output   s_axi_CONTROL_BUS_ARREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1:0] s_axi_CONTROL_BUS_ARADDR;
output   s_axi_CONTROL_BUS_RVALID;
input   s_axi_CONTROL_BUS_RREADY;
output  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1:0] s_axi_CONTROL_BUS_RDATA;
output  [1:0] s_axi_CONTROL_BUS_RRESP;
output   s_axi_CONTROL_BUS_BVALID;
input   s_axi_CONTROL_BUS_BREADY;
output  [1:0] s_axi_CONTROL_BUS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;

reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire    Block_proc_U0_ap_start;
wire    Block_proc_U0_ap_done;
wire    Block_proc_U0_ap_continue;
wire    Block_proc_U0_ap_idle;
wire    Block_proc_U0_ap_ready;
wire   [11:0] Block_proc_U0_imgColor_rows_V_out_din;
wire    Block_proc_U0_imgColor_rows_V_out_write;
wire   [10:0] Block_proc_U0_imgColor_cols_V_out_din;
wire    Block_proc_U0_imgColor_cols_V_out_write;
wire    AXIvideo2Mat_U0_ap_start;
wire    AXIvideo2Mat_U0_ap_done;
wire    AXIvideo2Mat_U0_ap_continue;
wire    AXIvideo2Mat_U0_ap_idle;
wire    AXIvideo2Mat_U0_ap_ready;
wire    AXIvideo2Mat_U0_img_rows_V_read;
wire    AXIvideo2Mat_U0_img_cols_V_read;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_0_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_0_V_write;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_1_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_1_V_write;
wire   [7:0] AXIvideo2Mat_U0_img_data_stream_2_V_din;
wire    AXIvideo2Mat_U0_img_data_stream_2_V_write;
wire   [11:0] AXIvideo2Mat_U0_img_rows_V_out_din;
wire    AXIvideo2Mat_U0_img_rows_V_out_write;
wire   [10:0] AXIvideo2Mat_U0_img_cols_V_out_din;
wire    AXIvideo2Mat_U0_img_cols_V_out_write;
reg    colorToNdg_U0_ap_start;
wire    colorToNdg_U0_ap_done;
wire    colorToNdg_U0_ap_continue;
wire    colorToNdg_U0_ap_idle;
wire    colorToNdg_U0_ap_ready;
wire    colorToNdg_U0_imgColor_rows_V_read;
wire    colorToNdg_U0_imgColor_cols_V_read;
wire    colorToNdg_U0_imgColor_data_stream_read;
wire    colorToNdg_U0_imgColor_data_stream_5_read;
wire    colorToNdg_U0_imgColor_data_stream_6_read;
wire   [7:0] colorToNdg_U0_imgNdg_data_stream_V;
wire    colorToNdg_U0_imgNdg_data_stream_V_ap_vld;
wire    imgColor_rows_V_c_full_n;
wire   [11:0] imgColor_rows_V_c_dout;
wire    imgColor_rows_V_c_empty_n;
wire    imgColor_cols_V_c_full_n;
wire   [10:0] imgColor_cols_V_c_dout;
wire    imgColor_cols_V_c_empty_n;
wire    imgColor_data_stream_full_n;
wire   [7:0] imgColor_data_stream_dout;
wire    imgColor_data_stream_empty_n;
wire    imgColor_data_stream_1_full_n;
wire   [7:0] imgColor_data_stream_1_dout;
wire    imgColor_data_stream_1_empty_n;
wire    imgColor_data_stream_2_full_n;
wire   [7:0] imgColor_data_stream_2_dout;
wire    imgColor_data_stream_2_empty_n;
wire    imgColor_rows_V_c40_full_n;
wire   [11:0] imgColor_rows_V_c40_dout;
wire    imgColor_rows_V_c40_empty_n;
wire    imgColor_cols_V_c41_full_n;
wire   [10:0] imgColor_cols_V_c41_dout;
wire    imgColor_cols_V_c41_empty_n;
wire    ap_sync_done;
wire    ap_sync_continue;
wire    ap_sync_ready;
wire    Block_proc_U0_start_full_n;
wire    Block_proc_U0_start_write;
wire    AXIvideo2Mat_U0_start_full_n;
wire    AXIvideo2Mat_U0_start_write;
wire    colorToNdg_U0_start_full_n;
wire    colorToNdg_U0_start_write;
wire   [31:0] ap_return;

// power-on initialization
initial begin
#0 colorToNdg_U0_ap_start = 1'b0;
end

main_CONTROL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_BUS_DATA_WIDTH ))
main_CONTROL_BUS_s_axi_U(
    .AWVALID(s_axi_CONTROL_BUS_AWVALID),
    .AWREADY(s_axi_CONTROL_BUS_AWREADY),
    .AWADDR(s_axi_CONTROL_BUS_AWADDR),
    .WVALID(s_axi_CONTROL_BUS_WVALID),
    .WREADY(s_axi_CONTROL_BUS_WREADY),
    .WDATA(s_axi_CONTROL_BUS_WDATA),
    .WSTRB(s_axi_CONTROL_BUS_WSTRB),
    .ARVALID(s_axi_CONTROL_BUS_ARVALID),
    .ARREADY(s_axi_CONTROL_BUS_ARREADY),
    .ARADDR(s_axi_CONTROL_BUS_ARADDR),
    .RVALID(s_axi_CONTROL_BUS_RVALID),
    .RREADY(s_axi_CONTROL_BUS_RREADY),
    .RDATA(s_axi_CONTROL_BUS_RDATA),
    .RRESP(s_axi_CONTROL_BUS_RRESP),
    .BVALID(s_axi_CONTROL_BUS_BVALID),
    .BREADY(s_axi_CONTROL_BUS_BREADY),
    .BRESP(s_axi_CONTROL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_return(32'd0)
);

Block_proc Block_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_proc_U0_ap_start),
    .ap_done(Block_proc_U0_ap_done),
    .ap_continue(Block_proc_U0_ap_continue),
    .ap_idle(Block_proc_U0_ap_idle),
    .ap_ready(Block_proc_U0_ap_ready),
    .imgColor_rows_V_out_din(Block_proc_U0_imgColor_rows_V_out_din),
    .imgColor_rows_V_out_full_n(imgColor_rows_V_c_full_n),
    .imgColor_rows_V_out_write(Block_proc_U0_imgColor_rows_V_out_write),
    .imgColor_cols_V_out_din(Block_proc_U0_imgColor_cols_V_out_din),
    .imgColor_cols_V_out_full_n(imgColor_cols_V_c_full_n),
    .imgColor_cols_V_out_write(Block_proc_U0_imgColor_cols_V_out_write)
);

AXIvideo2Mat AXIvideo2Mat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(AXIvideo2Mat_U0_ap_start),
    .ap_done(AXIvideo2Mat_U0_ap_done),
    .ap_continue(AXIvideo2Mat_U0_ap_continue),
    .ap_idle(AXIvideo2Mat_U0_ap_idle),
    .ap_ready(AXIvideo2Mat_U0_ap_ready),
    .AXI_video_strm_V_data_V(24'd0),
    .AXI_video_strm_V_keep_V(3'd0),
    .AXI_video_strm_V_strb_V(3'd0),
    .AXI_video_strm_V_user_V(1'd0),
    .AXI_video_strm_V_last_V(1'd0),
    .AXI_video_strm_V_id_V(1'd0),
    .AXI_video_strm_V_dest_V(1'd0),
    .img_rows_V_dout(imgColor_rows_V_c_dout),
    .img_rows_V_empty_n(imgColor_rows_V_c_empty_n),
    .img_rows_V_read(AXIvideo2Mat_U0_img_rows_V_read),
    .img_cols_V_dout(imgColor_cols_V_c_dout),
    .img_cols_V_empty_n(imgColor_cols_V_c_empty_n),
    .img_cols_V_read(AXIvideo2Mat_U0_img_cols_V_read),
    .img_data_stream_0_V_din(AXIvideo2Mat_U0_img_data_stream_0_V_din),
    .img_data_stream_0_V_full_n(imgColor_data_stream_full_n),
    .img_data_stream_0_V_write(AXIvideo2Mat_U0_img_data_stream_0_V_write),
    .img_data_stream_1_V_din(AXIvideo2Mat_U0_img_data_stream_1_V_din),
    .img_data_stream_1_V_full_n(imgColor_data_stream_1_full_n),
    .img_data_stream_1_V_write(AXIvideo2Mat_U0_img_data_stream_1_V_write),
    .img_data_stream_2_V_din(AXIvideo2Mat_U0_img_data_stream_2_V_din),
    .img_data_stream_2_V_full_n(imgColor_data_stream_2_full_n),
    .img_data_stream_2_V_write(AXIvideo2Mat_U0_img_data_stream_2_V_write),
    .img_rows_V_out_din(AXIvideo2Mat_U0_img_rows_V_out_din),
    .img_rows_V_out_full_n(imgColor_rows_V_c40_full_n),
    .img_rows_V_out_write(AXIvideo2Mat_U0_img_rows_V_out_write),
    .img_cols_V_out_din(AXIvideo2Mat_U0_img_cols_V_out_din),
    .img_cols_V_out_full_n(imgColor_cols_V_c41_full_n),
    .img_cols_V_out_write(AXIvideo2Mat_U0_img_cols_V_out_write)
);

colorToNdg colorToNdg_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(colorToNdg_U0_ap_start),
    .ap_done(colorToNdg_U0_ap_done),
    .ap_continue(colorToNdg_U0_ap_continue),
    .ap_idle(colorToNdg_U0_ap_idle),
    .ap_ready(colorToNdg_U0_ap_ready),
    .imgColor_rows_V_dout(imgColor_rows_V_c40_dout),
    .imgColor_rows_V_empty_n(imgColor_rows_V_c40_empty_n),
    .imgColor_rows_V_read(colorToNdg_U0_imgColor_rows_V_read),
    .imgColor_cols_V_dout(imgColor_cols_V_c41_dout),
    .imgColor_cols_V_empty_n(imgColor_cols_V_c41_empty_n),
    .imgColor_cols_V_read(colorToNdg_U0_imgColor_cols_V_read),
    .imgColor_data_stream_dout(imgColor_data_stream_dout),
    .imgColor_data_stream_empty_n(imgColor_data_stream_empty_n),
    .imgColor_data_stream_read(colorToNdg_U0_imgColor_data_stream_read),
    .imgColor_data_stream_5_dout(imgColor_data_stream_1_dout),
    .imgColor_data_stream_5_empty_n(imgColor_data_stream_1_empty_n),
    .imgColor_data_stream_5_read(colorToNdg_U0_imgColor_data_stream_5_read),
    .imgColor_data_stream_6_dout(imgColor_data_stream_2_dout),
    .imgColor_data_stream_6_empty_n(imgColor_data_stream_2_empty_n),
    .imgColor_data_stream_6_read(colorToNdg_U0_imgColor_data_stream_6_read),
    .imgNdg_data_stream_V(colorToNdg_U0_imgNdg_data_stream_V),
    .imgNdg_data_stream_V_ap_vld(colorToNdg_U0_imgNdg_data_stream_V_ap_vld)
);

fifo_w12_d1_A imgColor_rows_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_proc_U0_imgColor_rows_V_out_din),
    .if_full_n(imgColor_rows_V_c_full_n),
    .if_write(Block_proc_U0_imgColor_rows_V_out_write),
    .if_dout(imgColor_rows_V_c_dout),
    .if_empty_n(imgColor_rows_V_c_empty_n),
    .if_read(AXIvideo2Mat_U0_img_rows_V_read)
);

fifo_w11_d1_A imgColor_cols_V_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_proc_U0_imgColor_cols_V_out_din),
    .if_full_n(imgColor_cols_V_c_full_n),
    .if_write(Block_proc_U0_imgColor_cols_V_out_write),
    .if_dout(imgColor_cols_V_c_dout),
    .if_empty_n(imgColor_cols_V_c_empty_n),
    .if_read(AXIvideo2Mat_U0_img_cols_V_read)
);

fifo_w8_d1_A imgColor_data_stream_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_0_V_din),
    .if_full_n(imgColor_data_stream_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_0_V_write),
    .if_dout(imgColor_data_stream_dout),
    .if_empty_n(imgColor_data_stream_empty_n),
    .if_read(colorToNdg_U0_imgColor_data_stream_read)
);

fifo_w8_d1_A imgColor_data_stream_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_1_V_din),
    .if_full_n(imgColor_data_stream_1_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_1_V_write),
    .if_dout(imgColor_data_stream_1_dout),
    .if_empty_n(imgColor_data_stream_1_empty_n),
    .if_read(colorToNdg_U0_imgColor_data_stream_5_read)
);

fifo_w8_d1_A imgColor_data_stream_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_data_stream_2_V_din),
    .if_full_n(imgColor_data_stream_2_full_n),
    .if_write(AXIvideo2Mat_U0_img_data_stream_2_V_write),
    .if_dout(imgColor_data_stream_2_dout),
    .if_empty_n(imgColor_data_stream_2_empty_n),
    .if_read(colorToNdg_U0_imgColor_data_stream_6_read)
);

fifo_w12_d1_A imgColor_rows_V_c40_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_rows_V_out_din),
    .if_full_n(imgColor_rows_V_c40_full_n),
    .if_write(AXIvideo2Mat_U0_img_rows_V_out_write),
    .if_dout(imgColor_rows_V_c40_dout),
    .if_empty_n(imgColor_rows_V_c40_empty_n),
    .if_read(colorToNdg_U0_imgColor_rows_V_read)
);

fifo_w11_d1_A imgColor_cols_V_c41_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(AXIvideo2Mat_U0_img_cols_V_out_din),
    .if_full_n(imgColor_cols_V_c41_full_n),
    .if_write(AXIvideo2Mat_U0_img_cols_V_out_write),
    .if_dout(imgColor_cols_V_c41_dout),
    .if_empty_n(imgColor_cols_V_c41_empty_n),
    .if_read(colorToNdg_U0_imgColor_cols_V_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        colorToNdg_U0_ap_start <= 1'b0;
    end else begin
        colorToNdg_U0_ap_start <= 1'b1;
    end
end

assign AXIvideo2Mat_U0_ap_continue = 1'b1;

assign AXIvideo2Mat_U0_ap_start = 1'b1;

assign AXIvideo2Mat_U0_start_full_n = 1'b1;

assign AXIvideo2Mat_U0_start_write = 1'b0;

assign Block_proc_U0_ap_continue = 1'b1;

assign Block_proc_U0_ap_start = ap_start;

assign Block_proc_U0_start_full_n = 1'b1;

assign Block_proc_U0_start_write = 1'b0;

assign ap_done = 1'b1;

assign ap_idle = (colorToNdg_U0_ap_idle & Block_proc_U0_ap_idle & AXIvideo2Mat_U0_ap_idle);

assign ap_ready = 1'b1;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_continue = ap_sync_done;

assign ap_sync_done = 1'b1;

assign ap_sync_ready = ap_sync_done;

assign colorToNdg_U0_ap_continue = 1'b1;

assign colorToNdg_U0_start_full_n = 1'b1;

assign colorToNdg_U0_start_write = 1'b0;

endmodule //main
