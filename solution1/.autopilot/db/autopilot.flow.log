INFO: [HLS 200-0] Workspace /users/florcath/vivado_hls/project_tracking_on_soc/solution1 opened at Tue May 15 15:49:34 CEST 2018
Execute     config_clock -quiet -name default -period 10 -default=false 
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
Command     config_clock returned 0; 0 sec.
Execute     open_platform DefaultPlatform 
Command     open_platform returned 0; 0 sec.
Execute     import_lib /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/zynq/zynq 
Execute       source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/common/xilinx.lib 
Execute         source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/xilinx_interface.lib 
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/plb46.lib 
Command           ap_source returned 0; 0 sec.
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/fsl.lib 
Command           ap_source returned 0; 0 sec.
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/axi4.lib 
Command           ap_source returned 0; 0 sec.
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/maxi.lib 
Command           ap_source returned 0; 0 sec.
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/saxilite.lib 
Command           ap_source returned 0; 0 sec.
Command         ap_source returned 0; 0 sec.
Execute         source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/common/dsp48.lib 
Command         ap_source returned 0; 0 sec.
Execute         source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/ip/dds_compiler.lib 
Command         ap_source returned 0; 0 sec.
Execute         source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/ip/xfft.lib 
Command         ap_source returned 0; 0 sec.
Execute         source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/ip/xfir.lib 
Command         ap_source returned 0; 0 sec.
Command       ap_source returned 0; 0 sec.
Execute       source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/common/xilinx_old.lib 
Command       ap_source returned 0; 0 sec.
Execute       source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/common/xilinx_vivado.lib 
Command       ap_source returned 0; 0 sec.
Execute       source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/common/xilinx.hlp 
Execute         source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/common/target_info.tcl 
Command         ap_source returned 0; 0 sec.
Execute         source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/xilinx_interface.hlp 
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/maxi.hlp 
Command           ap_source returned 0; 0 sec.
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/saxilite.hlp 
Command           ap_source returned 0; 0 sec.
Command         ap_source returned 0; 0 sec.
Execute         source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/common/dsp48.hlp 
Command         ap_source returned 0; 0 sec.
Command       ap_source returned 0; 0 sec.
Execute       source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/zynq/dsp48e1.hlp 
Command       ap_source returned 0; 0.01 sec.
Execute       get_default_platform 
Command       get_default_platform returned 0; 0 sec.
Execute       config_chip_info -quiet -resource  {SLICE 13300}  {LUT 53200}     {FF 106400} {DSP48E 220}   {BRAM 280}  
Command       config_chip_info returned 0; 0 sec.
Execute       config_chip_info -quiet -speed medium 
Command       config_chip_info returned 0; 0 sec.
Execute       source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/common/xilinx.hlp 
Execute         source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/common/target_info.tcl 
Command         ap_source returned 0; 0 sec.
Execute         source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/xilinx_interface.hlp 
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/maxi.hlp 
Command           ap_source returned 0; 0 sec.
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/saxilite.hlp 
Command           ap_source returned 0; 0 sec.
Command         ap_source returned 0; 0 sec.
Execute         source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/common/dsp48.hlp 
Command         ap_source returned 0; 0 sec.
Command       ap_source returned 0; 0 sec.
Command     import_lib returned 0; 0.03 sec.
Execute     source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/zynq/zynq.gen 
Execute       source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/common/virtex.gen 
Execute         source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/common/xilinx.gen 
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/plb46.gen 
Command           ap_source returned 0; 0 sec.
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/fsl.gen 
Command           ap_source returned 0; 0 sec.
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/axi4.gen 
Command           ap_source returned 0; 0.01 sec.
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/nativeAXI4.gen 
Execute             source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/saxilite.gen 
Command             ap_source returned 0; 0 sec.
Execute             source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/maxi.gen 
Command             ap_source returned 0; 0 sec.
Command           ap_source returned 0; 0 sec.
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/scripts/xilinxcoregen.gen 
Command           ap_source returned 0; 0.01 sec.
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/XilEDKCoreGen.gen 
Command           ap_source returned 0; 0.01 sec.
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/ip/util.gen 
Command           ap_source returned 0; 0 sec.
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/ip/xfir.gen 
Command           ap_source returned 0; 0 sec.
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/ip/dds_compiler.gen 
Command           ap_source returned 0; 0 sec.
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/ip/xfft.gen 
Command           ap_source returned 0; 0.06 sec.
Command         ap_source returned 0; 0.09 sec.
Execute         source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/common/dsp48.gen 
Command         ap_source returned 0; 0 sec.
Command       ap_source returned 0; 0.1 sec.
Command     ap_source returned 0; 0.1 sec.
Execute     open_platform DefaultPlatform 
Command     open_platform returned 0; 0 sec.
Execute     import_lib /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/zynq/zynq_fpv6 
Execute       source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/common/xilinx_fpv7.lib 
Execute         source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/common/xilinx_hp.lib 
Command         ap_source returned 0; 0 sec.
Command       ap_source returned 0; 0 sec.
Execute       source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/common/xilinx_fpv.hlp 
Execute         source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/common/xilinx.hlp 
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/common/target_info.tcl 
Command           ap_source returned 0; 0 sec.
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/xilinx_interface.hlp 
Execute             source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/maxi.hlp 
Command             ap_source returned 0; 0 sec.
Execute             source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/interface/saxilite.hlp 
Command             ap_source returned 0; 0 sec.
Command           ap_source returned 0; 0 sec.
Execute           source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/common/dsp48.hlp 
Command           ap_source returned 0; 0 sec.
Command         ap_source returned 0; 0 sec.
Command       ap_source returned 0; 0 sec.
Execute       source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/zynq/zynq_hp.hlp 
Command       ap_source returned 0; 0 sec.
Command     import_lib returned 0; 0.02 sec.
Execute     source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/zynq/zynq_fpv6.gen 
Execute       source /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/xilinx/common/xilinx_fpv6.gen 
Command       ap_source returned 0; 0 sec.
Command     ap_source returned 0; 0 sec.
Execute     set_part xc7z020clg484-1 
Execute       add_library xilinx/zynq/zynq:xc7z020:clg484:-1 
Execute         get_default_platform 
Command         get_default_platform returned 0; 0 sec.
Execute         license_isbetapart xc7z020 
Command         license_isbetapart returned 1; 0.01 sec.
Execute         get_default_platform 
Command         get_default_platform returned 0; 0 sec.
Execute         config_chip_info -quiet -resource  {SLICE 13300}  {LUT 53200}     {FF 106400} {DSP48E 220}   {BRAM 280}  
Command         config_chip_info returned 0; 0 sec.
Execute         config_chip_info -quiet -speed slow 
Command         config_chip_info returned 0; 0 sec.
Command       add_library returned 0; 0.02 sec.
Execute       add_library xilinx/zynq/zynq_fpv6 
Execute         get_default_platform 
Command         get_default_platform returned 0; 0 sec.
Command       add_library returned 0; 0 sec.
INFO: [HLS 200-10] Setting target device to 'xc7z020clg484-1'
Execute       get_default_platform 
Command       get_default_platform returned 0; 0 sec.
Command     set_part returned 0; 0.04 sec.
Execute     get_default_platform 
Command     get_default_platform returned 0; 0 sec.
Execute     config_chip_info -quiet -resource  {SLICE 13300}  {LUT 53200}     {FF 106400} {DSP48E 220}   {BRAM 280}  
Command     config_chip_info returned 0; 0 sec.
Execute     config_chip_info -quiet -speed slow 
Command     config_chip_info returned 0; 0 sec.
Command   open_solution returned 0; 0.21 sec.
Execute   set_part xc7z020clg484-1 -tool vivado 
Execute     add_library xilinx/zynq/zynq:xc7z020:clg484:-1 
Execute       get_default_platform 
Command       get_default_platform returned 0; 0 sec.
Execute       license_isbetapart xc7z020 
Command       license_isbetapart returned 1; 0 sec.
Execute       get_default_platform 
Command       get_default_platform returned 0; 0 sec.
Execute       config_chip_info -quiet -resource  {SLICE 13300}  {LUT 53200}     {FF 106400} {DSP48E 220}   {BRAM 280}  
Command       config_chip_info returned 0; 0 sec.
Execute       config_chip_info -quiet -speed slow 
Command       config_chip_info returned 0; 0 sec.
Command     add_library returned 0; 0 sec.
Execute     add_library xilinx/zynq/zynq_fpv6 
Execute       get_default_platform 
Command       get_default_platform returned 0; 0 sec.
Command     add_library returned 0; 0.01 sec.
Execute     get_default_platform 
Command     get_default_platform returned 0; 0 sec.
Command   set_part returned 0; 0.03 sec.
Execute   create_clock -period 10 -name default 
Command   create_clock returned 0; 0 sec.
Execute   csynth_design 
Execute     elaborate -effort=medium -skip_syncheck=0 -keep_printf=0 -lm=0 -skip_cdt=0 -skip_transform=0 -VP9_rom_infer_simplify=0 -ng=0 -g=0 -opt_fp=0 -enable_clang39=0 
INFO: [HLS 200-10] Analyzing design file 'project_tracking_on_soc/sources/traitement.cpp' ...
INFO: [HLS 200-0] Compiling one TU...
Execute       is_m_axi_addr64 
Command       is_m_axi_addr64 returned 0; 0 sec.
INFO: [HLS 200-0] Handling project_tracking_on_soc/sources/traitement.cpp as C++
Execute       get_default_platform 
Command       get_default_platform returned 0; 0 sec.
Execute       is_encrypted project_tracking_on_soc/sources/traitement.cpp 
Command       is_encrypted returned 0; 0 sec.
Execute       get_default_platform 
Command       get_default_platform returned 0; 0 sec.
INFO: [HLS 200-0] Source preprocessing
Execute       clang  -fno-limit-debug-info -gcc-toolchain "/usr/lsa/apps/Xilinx/Vivado/2017.4/lnx64/tools/gcc" -hls  -fno-exceptions  -D__llvm__  -E "project_tracking_on_soc/sources/traitement.cpp"     -fno-math-errno -c -emit-llvm -O0  -mllvm -disable-llvm-optzns -fno-threadsafe-statics  -fno-use-cxa-atexit  -fno-threadsafe-statics -fno-use-cxa-atexit -D__CLANG_3_1__ -DAESL_SYN -D__SYNTHESIS__ -D__HLS_SYN__ -I "/usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot" -I "/usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot/ap_sysc" -include etc/autopilot_ssdm_op.h -D__DSP48E1__  -o "/users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/traitement.pp.0.cpp" 
INFO: [HLS 200-0] exec clang -fno-limit-debug-info -gcc-toolchain /usr/lsa/apps/Xilinx/Vivado/2017.4/lnx64/tools/gcc -hls -fno-exceptions -D__llvm__ -E project_tracking_on_soc/sources/traitement.cpp -fno-math-errno -c -emit-llvm -O0 -mllvm -disable-llvm-optzns -fno-threadsafe-statics -fno-use-cxa-atexit -fno-threadsafe-statics -fno-use-cxa-atexit -D__CLANG_3_1__ -DAESL_SYN -D__SYNTHESIS__ -D__HLS_SYN__ -I /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot -I /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot/ap_sysc -include etc/autopilot_ssdm_op.h -D__DSP48E1__ -o /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/traitement.pp.0.cpp
Command       clang returned 0; 0.86 sec.
INFO: [HLS 200-0] Syntax Checking before pre-processing...
Execute       clang  -fno-limit-debug-info -gcc-toolchain "/usr/lsa/apps/Xilinx/Vivado/2017.4/lnx64/tools/gcc" -hls    -fno-math-errno -c -emit-llvm -O0  -mllvm -disable-llvm-optzns -fno-threadsafe-statics  -fno-use-cxa-atexit  -fno-threadsafe-statics -fno-use-cxa-atexit -D__CLANG_3_1__ -DAESL_SYN -D__SYNTHESIS__ -D__HLS_SYN__ -I "/usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot" -I "/usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot/ap_sysc" -include etc/autopilot_ssdm_op.h -D__DSP48E1__  "/users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/traitement.pp.0.cpp"  -o "/users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/useless.bc"  
INFO: [HLS 200-0] exec clang -fno-limit-debug-info -gcc-toolchain /usr/lsa/apps/Xilinx/Vivado/2017.4/lnx64/tools/gcc -hls -fno-math-errno -c -emit-llvm -O0 -mllvm -disable-llvm-optzns -fno-threadsafe-statics -fno-use-cxa-atexit -fno-threadsafe-statics -fno-use-cxa-atexit -D__CLANG_3_1__ -DAESL_SYN -D__SYNTHESIS__ -D__HLS_SYN__ -I /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot -I /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot/ap_sysc -include etc/autopilot_ssdm_op.h -D__DSP48E1__ /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/traitement.pp.0.cpp -o /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/useless.bc
Command       clang returned 0; 2.18 sec.
INFO: [HLS 200-0] GCC PP time: 3 seconds per iteration
Execute       list_core -type functional_unit 
Command       list_core returned 0; 0 sec.
INFO: [HLS 200-0] CDT Preprocessing...
INFO: [HLS 200-0] Marker-Pragma convertor: /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/traitement.pp.0.cpp /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/traitement.pp.0.cpp.ap-line.cpp /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/traitement.pp.0.cpp.ap-line.cpp.CXX 1
INFO: [HLS 200-0] Converting Markers to Pragmas...
Execute       cdt  "/users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/traitement.pp.0.cpp.ap-line.cpp"  -m "main" -o "/users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/traitement.pp.0.cpp.ap-cdt.cpp" --pp --directive /users/florcath/vivado_hls/project_tracking_on_soc/solution1/solution1.directive --source /users/florcath/vivado_hls/project_tracking_on_soc/sources/traitement.cpp --error /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db --funcunit "AddSub AddSub_DSP AddSubnS DAddSub_fulldsp DAddSub_nodsp DDiv DExp_fulldsp DExp_meddsp DExp_nodsp DLog_fulldsp DLog_meddsp DLog_nodsp DMul_fulldsp DMul_maxdsp DMul_meddsp DMul_nodsp DRSqrt DRecip DSP_Double_Pump_Mac16 DSP_Double_Pump_Mac8 DSP_Macro DSqrt DivnS FAddSub_fulldsp FAddSub_nodsp FDiv FExp_fulldsp FExp_meddsp FExp_nodsp FLog_fulldsp FLog_meddsp FLog_nodsp FMul_fulldsp FMul_maxdsp FMul_meddsp FMul_nodsp FRSqrt_fulldsp FRSqrt_nodsp FRecip_fulldsp FRecip_nodsp FSqrt HAddSub_fulldsp HAddSub_meddsp HAddSub_nodsp HDiv HMul_fulldsp HMul_maxdsp HMul_nodsp HSqrt Mul Mul2S Mul3S Mul4S Mul5S Mul6S Mul_LUT MulnS MuxnS" --ve --vetcl /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db --ca --es --gf --pd --p2d /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db --sd --scff /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/.systemc_flag --ad 
INFO: [HLS 200-0] Error:Syntax error in source:for (__decltype(__n + 0) __niter = __n;
Error:Missing ; in source:t
Error:Syntax error in source:)
 *__first = __value;
Error:Syntax error in source:for (__decltype(__n + 0) __niter = __n;
Error:Missing ; in source:t
Error:Syntax error in source:)
 *__first = __tmp;
Command       cdt returned 0; 8.96 sec.
INFO: [HLS 200-0] Marker-Pragma convertor: /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/traitement.pp.0.cpp.ap-cdt.cpp /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/traitement.pragma.0.cpp /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/traitement.pragma.0.cpp.ap-line.CXX 0
INFO: [HLS 200-0] Converting Pragmas to Markers...
Execute       source /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/pragma.status.tcl 
Command       ap_source returned 0; 0.01 sec.
INFO: [HLS 200-0] Pragma Handling...
INFO: [HLS 200-0] Source preprocessing
Execute       clang  -fno-limit-debug-info -gcc-toolchain "/usr/lsa/apps/Xilinx/Vivado/2017.4/lnx64/tools/gcc" -hls  -fno-exceptions  -D__llvm__  -E "/users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/traitement.pragma.1.cpp"     -fno-math-errno -c -emit-llvm -O0  -mllvm -disable-llvm-optzns -fno-threadsafe-statics  -fno-use-cxa-atexit  -fno-threadsafe-statics -fno-use-cxa-atexit -D__CLANG_3_1__ -DAESL_SYN -D__SYNTHESIS__ -D__HLS_SYN__ -I "/usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot" -I "/usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot/ap_sysc" -include etc/autopilot_ssdm_op.h -D__DSP48E1__  -o "/users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/traitement.pragma.2.cpp" 
INFO: [HLS 200-0] exec clang -fno-limit-debug-info -gcc-toolchain /usr/lsa/apps/Xilinx/Vivado/2017.4/lnx64/tools/gcc -hls -fno-exceptions -D__llvm__ -E /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/traitement.pragma.1.cpp -fno-math-errno -c -emit-llvm -O0 -mllvm -disable-llvm-optzns -fno-threadsafe-statics -fno-use-cxa-atexit -fno-threadsafe-statics -fno-use-cxa-atexit -D__CLANG_3_1__ -DAESL_SYN -D__SYNTHESIS__ -D__HLS_SYN__ -I /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot -I /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot/ap_sysc -include etc/autopilot_ssdm_op.h -D__DSP48E1__ -o /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/traitement.pragma.2.cpp
Command       clang returned 0; 0.79 sec.
Execute       get_default_platform 
Command       get_default_platform returned 0; 0 sec.
INFO: [HLS 200-0] Processing labels
Execute       clang  -fno-limit-debug-info -gcc-toolchain /usr/lsa/apps/Xilinx/Vivado/2017.4/lnx64/tools/gcc -hls -hls-analyze-label -hls-analyze-pragma -fno-exceptions  -D__llvm__  -w  "/users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/traitement.pragma.2.cpp"    -fno-math-errno -c -emit-llvm -O0  -mllvm -disable-llvm-optzns -fno-threadsafe-statics  -fno-use-cxa-atexit -DAESL_SYN -D__SYNTHESIS__ -D__HLS_SYN__ -I "/usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot" -I "/usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot/ap_sysc" -include etc/autopilot_ssdm_op.h -D__DSP48E1__ -g -o "/users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/traitement.g.bc" 
INFO: [HLS 200-0] exec clang -fno-limit-debug-info -gcc-toolchain /usr/lsa/apps/Xilinx/Vivado/2017.4/lnx64/tools/gcc -hls -hls-analyze-label -hls-analyze-pragma -fno-exceptions -D__llvm__ -w /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/traitement.pragma.2.cpp -fno-math-errno -c -emit-llvm -O0 -mllvm -disable-llvm-optzns -fno-threadsafe-statics -fno-use-cxa-atexit -DAESL_SYN -D__SYNTHESIS__ -D__HLS_SYN__ -I /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot -I /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot/ap_sysc -include etc/autopilot_ssdm_op.h -D__DSP48E1__ -g -o /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/traitement.g.bc
Command       clang returned 0; 2.28 sec.
INFO: [HLS 200-10] Analyzing design file 'project_tracking_on_soc/sources/tracking_tools.cpp' ...
INFO: [HLS 200-0] Compiling one TU...
Execute       is_m_axi_addr64 
Command       is_m_axi_addr64 returned 0; 0 sec.
INFO: [HLS 200-0] Handling project_tracking_on_soc/sources/tracking_tools.cpp as C++
Execute       get_default_platform 
Command       get_default_platform returned 0; 0 sec.
Execute       is_encrypted project_tracking_on_soc/sources/tracking_tools.cpp 
Command       is_encrypted returned 0; 0 sec.
Execute       get_default_platform 
Command       get_default_platform returned 0; 0 sec.
INFO: [HLS 200-0] Source preprocessing
Execute       clang  -fno-limit-debug-info -gcc-toolchain "/usr/lsa/apps/Xilinx/Vivado/2017.4/lnx64/tools/gcc" -hls  -fno-exceptions  -D__llvm__  -E "project_tracking_on_soc/sources/tracking_tools.cpp"     -fno-math-errno -c -emit-llvm -O0  -mllvm -disable-llvm-optzns -fno-threadsafe-statics  -fno-use-cxa-atexit  -fno-threadsafe-statics -fno-use-cxa-atexit -D__CLANG_3_1__ -DAESL_SYN -D__SYNTHESIS__ -D__HLS_SYN__ -I "/usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot" -I "/usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot/ap_sysc" -include etc/autopilot_ssdm_op.h -D__DSP48E1__  -o "/users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/tracking_tools.pp.0.cpp" 
INFO: [HLS 200-0] exec clang -fno-limit-debug-info -gcc-toolchain /usr/lsa/apps/Xilinx/Vivado/2017.4/lnx64/tools/gcc -hls -fno-exceptions -D__llvm__ -E project_tracking_on_soc/sources/tracking_tools.cpp -fno-math-errno -c -emit-llvm -O0 -mllvm -disable-llvm-optzns -fno-threadsafe-statics -fno-use-cxa-atexit -fno-threadsafe-statics -fno-use-cxa-atexit -D__CLANG_3_1__ -DAESL_SYN -D__SYNTHESIS__ -D__HLS_SYN__ -I /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot -I /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot/ap_sysc -include etc/autopilot_ssdm_op.h -D__DSP48E1__ -o /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/tracking_tools.pp.0.cpp
Command       clang returned 0; 0.81 sec.
INFO: [HLS 200-0] Syntax Checking before pre-processing...
Execute       clang  -fno-limit-debug-info -gcc-toolchain "/usr/lsa/apps/Xilinx/Vivado/2017.4/lnx64/tools/gcc" -hls    -fno-math-errno -c -emit-llvm -O0  -mllvm -disable-llvm-optzns -fno-threadsafe-statics  -fno-use-cxa-atexit  -fno-threadsafe-statics -fno-use-cxa-atexit -D__CLANG_3_1__ -DAESL_SYN -D__SYNTHESIS__ -D__HLS_SYN__ -I "/usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot" -I "/usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot/ap_sysc" -include etc/autopilot_ssdm_op.h -D__DSP48E1__  "/users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/tracking_tools.pp.0.cpp"  -o "/users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/useless.bc"  
INFO: [HLS 200-0] exec clang -fno-limit-debug-info -gcc-toolchain /usr/lsa/apps/Xilinx/Vivado/2017.4/lnx64/tools/gcc -hls -fno-math-errno -c -emit-llvm -O0 -mllvm -disable-llvm-optzns -fno-threadsafe-statics -fno-use-cxa-atexit -fno-threadsafe-statics -fno-use-cxa-atexit -D__CLANG_3_1__ -DAESL_SYN -D__SYNTHESIS__ -D__HLS_SYN__ -I /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot -I /usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot/ap_sysc -include etc/autopilot_ssdm_op.h -D__DSP48E1__ /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/tracking_tools.pp.0.cpp -o /users/florcath/vivado_hls/project_tracking_on_soc/solution1/.autopilot/db/useless.bc
WARNING: [HLS 200-40] In file included from project_tracking_on_soc/sources/tracking_tools.cpp:1:
project_tracking_on_soc/sources/tracking_tools.cpp:30:12: error: invalid operands to binary expression ('PIXEL_GRAY' (aka 'Scalar<1, unsigned char>') and 'int')
   if(pixG > 200)
      ~~~~ ^ ~~~
/usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot/ap_int_syn.h:3553:854: note: candidate template ignored: failed template argument deduction
template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator == ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator == (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator == ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator == (ap_int_base<1,false>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator != ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator != (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator != ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator != (ap_int_base<1,false>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator > ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator > (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator > ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator > (ap_int_base<1,false>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator >= ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator >= (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator >= ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator >= (ap_int_base<1,false>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator < ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator < (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator < ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator < (ap_int_base<1,false>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator <= ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator <= (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator <= ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator <= (ap_int_base<1,false>(op2)); }
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ^
/usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot/ap_int_syn.h:3553:1051: note: candidate template ignored: failed template argument deduction
template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator == ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator == (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator == ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator == (ap_int_base<1,false>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator != ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator != (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator != ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator != (ap_int_base<1,false>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator > ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator > (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator > ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator > (ap_int_base<1,false>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator >= ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator >= (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator >= ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator >= (ap_int_base<1,false>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator < ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator < (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator < ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator < (ap_int_base<1,false>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator <= ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator <= (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator <= ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator <= (ap_int_base<1,false>(op2)); }

/usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot/ap_int_syn.h:3554:850: note: candidate template ignored: failed template argument deduction
template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator == ( char i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<8,true>(i_op).operator == (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator == ( const ap_int_base<_AP_W,_AP_S> &op, char op2) { return op.operator == (ap_int_base<8,true>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator != ( char i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<8,true>(i_op).operator != (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator != ( const ap_int_base<_AP_W,_AP_S> &op, char op2) { return op.operator != (ap_int_base<8,true>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator > ( char i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<8,true>(i_op).operator > (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator > ( const ap_int_base<_AP_W,_AP_S> &op, char op2) { return op.operator > (ap_int_base<8,true>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator >= ( char i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<8,true>(i_op).operator >= (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator >= ( const ap_int_base<_AP_W,_AP_S> &op, char op2) { return op.operator >= (ap_int_base<8,true>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator < ( char i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<8,true>(i_op).operator < (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator < ( const ap_int_base<_AP_W,_AP_S> &op, char op2) { return op.operator < (ap_int_base<8,true>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator <= ( char i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<8,true>(i_op).operator <= (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator <= ( const ap_int_base<_AP_W,_AP_S> &op, char op2) { return op.operator <= (ap_int_base<8,true>(op2)); }
                                                                                                                                                                                                                                                                                                                                                                                                    Command       clang returned 2; 2.27 sec.
ERROR: [HLS 200-70] Compilation errors found:
Pragma processor failed: In file included from project_tracking_on_soc/sources/tracking_tools.cpp:1:
project_tracking_on_soc/sources/tracking_tools.cpp:30:12: error: invalid operands to binary expression ('PIXEL_GRAY' (aka 'Scalar<1, unsigned char>') and 'int')
   if(pixG > 200)
      ~~~~ ^ ~~~
/usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot/ap_int_syn.h:3553:854: note: candidate template ignored: failed template argument deduction
template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator == ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator == (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator == ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator == (ap_int_base<1,false>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator != ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator != (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator != ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator != (ap_int_base<1,false>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator > ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator > (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator > ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator > (ap_int_base<1,false>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator >= ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator >= (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator >= ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator >= (ap_int_base<1,false>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator < ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator < (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator < ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator < (ap_int_base<1,false>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator <= ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator <= (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator <= ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator <= (ap_int_base<1,false>(op2)); }

/usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot/ap_int_syn.h:3553:1051: note: candidate template ignored: failed template argument deduction
template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator == ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator == (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator == ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator == (ap_int_base<1,false>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator != ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator != (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator != ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator != (ap_int_base<1,false>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator > ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator > (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator > ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator > (ap_int_base<1,false>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator >= ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator >= (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator >= ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator >= (ap_int_base<1,false>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator < ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator < (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator < ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator < (ap_int_base<1,false>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator <= ( bool i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<1,false>(i_op).operator <= (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator <= ( const ap_int_base<_AP_W,_AP_S> &op, bool op2) { return op.operator <= (ap_int_base<1,false>(op2)); }

/usr/lsa/apps/Xilinx/Vivado/2017.4/common/technology/autopilot/ap_int_syn.h:3554:850: note: candidate template ignored: failed template argument deduction
template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator == ( char i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<8,true>(i_op).operator == (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator == ( const ap_int_base<_AP_W,_AP_S> &op, char op2) { return op.operator == (ap_int_base<8,true>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator != ( char i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<8,true>(i_op).operator != (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator != ( const ap_int_base<_AP_W,_AP_S> &op, char op2) { return op.operator != (ap_int_base<8,true>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator > ( char i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<8,true>(i_op).operator > (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator > ( const ap_int_base<_AP_W,_AP_S> &op, char op2) { return op.operator > (ap_int_base<8,true>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator >= ( char i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<8,true>(i_op).operator >= (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator >= ( const ap_int_base<_AP_W,_AP_S> &op, char op2) { return op.operator >= (ap_int_base<8,true>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator < ( char i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<8,true>(i_op).operator < (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator < ( const ap_int_base<_AP_W,_AP_S> &op, char op2) { return op.operator < (ap_int_base<8,true>(op2)); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator <= ( char i_op, const ap_int_base<_AP_W,_AP_S, false> &op) { return ap_int_base<8,true>(i_op).operator <= (op); } template<int _AP_W, bool _AP_S> inline __attribute__((always_inline)) bool operator <= ( const ap_int_base<_AP_W,_AP_S> &op, char op2) { return op.operator <= (ap_int_base<8,true>(op2)); }
                                                                                                                                                                                                                                                                                                                                                 Command     elaborate returned 2; 19.36 sec.
Command   csynth_design returned 2; 19.36 sec.
Command ap_source returned 1; 19.64 sec.
Failed checking during preprocessing.
    while executing
"source /users/florcath/vivado_hls/project_tracking_on_soc/solution1/csynth.tcl"
    invoked from within
"hls::main /users/florcath/vivado_hls/project_tracking_on_soc/solution1/csynth.tcl"
    ("uplevel" body line 1)
    invoked from within
"uplevel 1 hls::main {*}$args"
    (procedure "hls_proc" line 5)
    invoked from within
"hls_proc $argv"
Execute cleanup_all 
Command cleanup_all returned 0; 0 sec.
