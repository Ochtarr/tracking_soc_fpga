// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "colorToNdg.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic colorToNdg::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic colorToNdg::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> colorToNdg::ap_ST_fsm_state1 = "1";
const sc_lv<4> colorToNdg::ap_ST_fsm_state2 = "10";
const sc_lv<4> colorToNdg::ap_ST_fsm_state3 = "100";
const sc_lv<4> colorToNdg::ap_ST_fsm_state4 = "1000";
const sc_lv<32> colorToNdg::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> colorToNdg::ap_const_lv32_2 = "10";
const sc_lv<1> colorToNdg::ap_const_lv1_0 = "0";
const sc_lv<32> colorToNdg::ap_const_lv32_1 = "1";
const sc_lv<1> colorToNdg::ap_const_lv1_1 = "1";
const sc_lv<32> colorToNdg::ap_const_lv32_3 = "11";
const sc_lv<12> colorToNdg::ap_const_lv12_1 = "1";
const sc_lv<13> colorToNdg::ap_const_lv13_1 = "1";
const sc_lv<32> colorToNdg::ap_const_lv32_C = "1100";
const sc_lv<32> colorToNdg::ap_const_lv32_13 = "10011";
const sc_lv<22> colorToNdg::ap_const_lv22_556 = "10101010110";
const bool colorToNdg::ap_const_boolean_1 = true;

colorToNdg::colorToNdg(sc_module_name name) : sc_module(name), mVcdFile(0) {
    main_am_addmul_9nbkb_U17 = new main_am_addmul_9nbkb<1,1,9,8,12,22>("main_am_addmul_9nbkb_U17");
    main_am_addmul_9nbkb_U17->din0(grp_fu_197_p0);
    main_am_addmul_9nbkb_U17->din1(grp_fu_197_p1);
    main_am_addmul_9nbkb_U17->din2(grp_fu_197_p2);
    main_am_addmul_9nbkb_U17->dout(grp_fu_197_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( imgColor_rows_V_empty_n );
    sensitive << ( imgColor_cols_V_empty_n );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( imgColor_data_stream_empty_n );
    sensitive << ( imgColor_data_stream_5_empty_n );
    sensitive << ( imgColor_data_stream_6_empty_n );
    sensitive << ( exitcond_fu_156_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_145_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_145_p2 );

    SC_METHOD(thread_col_fu_161_p2);
    sensitive << ( col_i_reg_106 );

    SC_METHOD(thread_exitcond1_fu_145_p2);
    sensitive << ( tmp_6_cast_reg_211 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( lig_i_reg_95 );

    SC_METHOD(thread_exitcond_fu_156_p2);
    sensitive << ( imgColor_data_stream_empty_n );
    sensitive << ( imgColor_data_stream_5_empty_n );
    sensitive << ( imgColor_data_stream_6_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_156_p2 );
    sensitive << ( tmp_4_cast_reg_206 );
    sensitive << ( col_i_reg_106 );

    SC_METHOD(thread_grp_fu_197_p0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_fu_197_p00 );

    SC_METHOD(thread_grp_fu_197_p00);
    sensitive << ( tmp_1_i_reg_237 );

    SC_METHOD(thread_grp_fu_197_p1);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_fu_197_p10 );

    SC_METHOD(thread_grp_fu_197_p10);
    sensitive << ( tmp_reg_232 );

    SC_METHOD(thread_grp_fu_197_p2);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_imgColor_cols_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( imgColor_cols_V_empty_n );

    SC_METHOD(thread_imgColor_cols_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( imgColor_rows_V_empty_n );
    sensitive << ( imgColor_cols_V_empty_n );

    SC_METHOD(thread_imgColor_data_stream_5_blk_n);
    sensitive << ( imgColor_data_stream_5_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_156_p2 );

    SC_METHOD(thread_imgColor_data_stream_5_read);
    sensitive << ( imgColor_data_stream_empty_n );
    sensitive << ( imgColor_data_stream_5_empty_n );
    sensitive << ( imgColor_data_stream_6_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_156_p2 );

    SC_METHOD(thread_imgColor_data_stream_6_blk_n);
    sensitive << ( imgColor_data_stream_6_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_156_p2 );

    SC_METHOD(thread_imgColor_data_stream_6_read);
    sensitive << ( imgColor_data_stream_empty_n );
    sensitive << ( imgColor_data_stream_5_empty_n );
    sensitive << ( imgColor_data_stream_6_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_156_p2 );

    SC_METHOD(thread_imgColor_data_stream_blk_n);
    sensitive << ( imgColor_data_stream_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_156_p2 );

    SC_METHOD(thread_imgColor_data_stream_read);
    sensitive << ( imgColor_data_stream_empty_n );
    sensitive << ( imgColor_data_stream_5_empty_n );
    sensitive << ( imgColor_data_stream_6_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_156_p2 );

    SC_METHOD(thread_imgColor_rows_V_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( imgColor_rows_V_empty_n );

    SC_METHOD(thread_imgColor_rows_V_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( imgColor_rows_V_empty_n );
    sensitive << ( imgColor_cols_V_empty_n );

    SC_METHOD(thread_imgNdg_data_stream_V);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( grp_fu_197_p3 );

    SC_METHOD(thread_imgNdg_data_stream_V_ap_vld);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_lig_fu_150_p2);
    sensitive << ( lig_i_reg_95 );

    SC_METHOD(thread_tmp_1_i_fu_175_p2);
    sensitive << ( tmp_8_cast_i_fu_171_p1 );
    sensitive << ( tmp_7_cast_i_fu_167_p1 );

    SC_METHOD(thread_tmp_4_cast_fu_127_p1);
    sensitive << ( tmp_4_fu_121_p2 );

    SC_METHOD(thread_tmp_4_fu_121_p2);
    sensitive << ( tmp_cast_fu_117_p1 );

    SC_METHOD(thread_tmp_5_cast_fu_131_p1);
    sensitive << ( imgColor_rows_V_dout );

    SC_METHOD(thread_tmp_6_cast_fu_141_p1);
    sensitive << ( tmp_6_fu_135_p2 );

    SC_METHOD(thread_tmp_6_fu_135_p2);
    sensitive << ( tmp_5_cast_fu_131_p1 );

    SC_METHOD(thread_tmp_7_cast_i_fu_167_p1);
    sensitive << ( imgColor_data_stream_dout );

    SC_METHOD(thread_tmp_8_cast_i_fu_171_p1);
    sensitive << ( imgColor_data_stream_5_dout );

    SC_METHOD(thread_tmp_cast_fu_117_p1);
    sensitive << ( imgColor_cols_V_dout );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( imgColor_rows_V_empty_n );
    sensitive << ( imgColor_cols_V_empty_n );
    sensitive << ( imgColor_data_stream_empty_n );
    sensitive << ( imgColor_data_stream_5_empty_n );
    sensitive << ( imgColor_data_stream_6_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_156_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_145_p2 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "colorToNdg_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, imgColor_rows_V_dout, "(port)imgColor_rows_V_dout");
    sc_trace(mVcdFile, imgColor_rows_V_empty_n, "(port)imgColor_rows_V_empty_n");
    sc_trace(mVcdFile, imgColor_rows_V_read, "(port)imgColor_rows_V_read");
    sc_trace(mVcdFile, imgColor_cols_V_dout, "(port)imgColor_cols_V_dout");
    sc_trace(mVcdFile, imgColor_cols_V_empty_n, "(port)imgColor_cols_V_empty_n");
    sc_trace(mVcdFile, imgColor_cols_V_read, "(port)imgColor_cols_V_read");
    sc_trace(mVcdFile, imgColor_data_stream_dout, "(port)imgColor_data_stream_dout");
    sc_trace(mVcdFile, imgColor_data_stream_empty_n, "(port)imgColor_data_stream_empty_n");
    sc_trace(mVcdFile, imgColor_data_stream_read, "(port)imgColor_data_stream_read");
    sc_trace(mVcdFile, imgColor_data_stream_5_dout, "(port)imgColor_data_stream_5_dout");
    sc_trace(mVcdFile, imgColor_data_stream_5_empty_n, "(port)imgColor_data_stream_5_empty_n");
    sc_trace(mVcdFile, imgColor_data_stream_5_read, "(port)imgColor_data_stream_5_read");
    sc_trace(mVcdFile, imgColor_data_stream_6_dout, "(port)imgColor_data_stream_6_dout");
    sc_trace(mVcdFile, imgColor_data_stream_6_empty_n, "(port)imgColor_data_stream_6_empty_n");
    sc_trace(mVcdFile, imgColor_data_stream_6_read, "(port)imgColor_data_stream_6_read");
    sc_trace(mVcdFile, imgNdg_data_stream_V, "(port)imgNdg_data_stream_V");
    sc_trace(mVcdFile, imgNdg_data_stream_V_ap_vld, "(port)imgNdg_data_stream_V_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, imgColor_rows_V_blk_n, "imgColor_rows_V_blk_n");
    sc_trace(mVcdFile, imgColor_cols_V_blk_n, "imgColor_cols_V_blk_n");
    sc_trace(mVcdFile, imgColor_data_stream_blk_n, "imgColor_data_stream_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond_fu_156_p2, "exitcond_fu_156_p2");
    sc_trace(mVcdFile, imgColor_data_stream_5_blk_n, "imgColor_data_stream_5_blk_n");
    sc_trace(mVcdFile, imgColor_data_stream_6_blk_n, "imgColor_data_stream_6_blk_n");
    sc_trace(mVcdFile, tmp_4_cast_fu_127_p1, "tmp_4_cast_fu_127_p1");
    sc_trace(mVcdFile, tmp_4_cast_reg_206, "tmp_4_cast_reg_206");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, tmp_6_cast_fu_141_p1, "tmp_6_cast_fu_141_p1");
    sc_trace(mVcdFile, tmp_6_cast_reg_211, "tmp_6_cast_reg_211");
    sc_trace(mVcdFile, lig_fu_150_p2, "lig_fu_150_p2");
    sc_trace(mVcdFile, lig_reg_219, "lig_reg_219");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, col_fu_161_p2, "col_fu_161_p2");
    sc_trace(mVcdFile, col_reg_227, "col_reg_227");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, tmp_reg_232, "tmp_reg_232");
    sc_trace(mVcdFile, tmp_1_i_fu_175_p2, "tmp_1_i_fu_175_p2");
    sc_trace(mVcdFile, tmp_1_i_reg_237, "tmp_1_i_reg_237");
    sc_trace(mVcdFile, lig_i_reg_95, "lig_i_reg_95");
    sc_trace(mVcdFile, col_i_reg_106, "col_i_reg_106");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, exitcond1_fu_145_p2, "exitcond1_fu_145_p2");
    sc_trace(mVcdFile, tmp_cast_fu_117_p1, "tmp_cast_fu_117_p1");
    sc_trace(mVcdFile, tmp_4_fu_121_p2, "tmp_4_fu_121_p2");
    sc_trace(mVcdFile, tmp_5_cast_fu_131_p1, "tmp_5_cast_fu_131_p1");
    sc_trace(mVcdFile, tmp_6_fu_135_p2, "tmp_6_fu_135_p2");
    sc_trace(mVcdFile, tmp_8_cast_i_fu_171_p1, "tmp_8_cast_i_fu_171_p1");
    sc_trace(mVcdFile, tmp_7_cast_i_fu_167_p1, "tmp_7_cast_i_fu_167_p1");
    sc_trace(mVcdFile, grp_fu_197_p3, "grp_fu_197_p3");
    sc_trace(mVcdFile, grp_fu_197_p0, "grp_fu_197_p0");
    sc_trace(mVcdFile, grp_fu_197_p1, "grp_fu_197_p1");
    sc_trace(mVcdFile, grp_fu_197_p2, "grp_fu_197_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_197_p00, "grp_fu_197_p00");
    sc_trace(mVcdFile, grp_fu_197_p10, "grp_fu_197_p10");
#endif

    }
}

colorToNdg::~colorToNdg() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete main_am_addmul_9nbkb_U17;
}

void colorToNdg::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_145_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_145_p2.read()))) {
        col_i_reg_106 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        col_i_reg_106 = col_reg_227.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !((esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_5_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_6_empty_n.read()))) && 
         esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_1))) {
        lig_i_reg_95 = lig_reg_219.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, imgColor_rows_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, imgColor_cols_V_empty_n.read())))) {
        lig_i_reg_95 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !((esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_5_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_6_empty_n.read()))))) {
        col_reg_227 = col_fu_161_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lig_reg_219 = lig_fu_150_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && !((esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_5_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_6_empty_n.read()))))) {
        tmp_1_i_reg_237 = tmp_1_i_fu_175_p2.read();
        tmp_reg_232 = imgColor_data_stream_6_dout.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, imgColor_rows_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, imgColor_cols_V_empty_n.read())))) {
        tmp_4_cast_reg_206 = tmp_4_cast_fu_127_p1.read();
        tmp_6_cast_reg_211 = tmp_6_cast_fu_141_p1.read();
    }
}

void colorToNdg::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void colorToNdg::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void colorToNdg::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void colorToNdg::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void colorToNdg::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, imgColor_rows_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, imgColor_cols_V_empty_n.read()));
}

void colorToNdg::thread_ap_block_state3() {
    ap_block_state3 = ((esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_5_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_6_empty_n.read())));
}

void colorToNdg::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_145_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void colorToNdg::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void colorToNdg::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_145_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void colorToNdg::thread_col_fu_161_p2() {
    col_fu_161_p2 = (!col_i_reg_106.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(col_i_reg_106.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void colorToNdg::thread_exitcond1_fu_145_p2() {
    exitcond1_fu_145_p2 = (!lig_i_reg_95.read().is_01() || !tmp_6_cast_reg_211.read().is_01())? sc_lv<1>(): sc_lv<1>(lig_i_reg_95.read() == tmp_6_cast_reg_211.read());
}

void colorToNdg::thread_exitcond_fu_156_p2() {
    exitcond_fu_156_p2 = (!col_i_reg_106.read().is_01() || !tmp_4_cast_reg_206.read().is_01())? sc_lv<1>(): sc_lv<1>(col_i_reg_106.read() == tmp_4_cast_reg_206.read());
}

void colorToNdg::thread_grp_fu_197_p0() {
    grp_fu_197_p0 =  (sc_lv<9>) (grp_fu_197_p00.read());
}

void colorToNdg::thread_grp_fu_197_p00() {
    grp_fu_197_p00 = esl_zext<10,9>(tmp_1_i_reg_237.read());
}

void colorToNdg::thread_grp_fu_197_p1() {
    grp_fu_197_p1 =  (sc_lv<8>) (grp_fu_197_p10.read());
}

void colorToNdg::thread_grp_fu_197_p10() {
    grp_fu_197_p10 = esl_zext<10,8>(tmp_reg_232.read());
}

void colorToNdg::thread_grp_fu_197_p2() {
    grp_fu_197_p2 =  (sc_lv<12>) (ap_const_lv22_556);
}

void colorToNdg::thread_imgColor_cols_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        imgColor_cols_V_blk_n = imgColor_cols_V_empty_n.read();
    } else {
        imgColor_cols_V_blk_n = ap_const_logic_1;
    }
}

void colorToNdg::thread_imgColor_cols_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, imgColor_rows_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, imgColor_cols_V_empty_n.read())))) {
        imgColor_cols_V_read = ap_const_logic_1;
    } else {
        imgColor_cols_V_read = ap_const_logic_0;
    }
}

void colorToNdg::thread_imgColor_data_stream_5_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0))) {
        imgColor_data_stream_5_blk_n = imgColor_data_stream_5_empty_n.read();
    } else {
        imgColor_data_stream_5_blk_n = ap_const_logic_1;
    }
}

void colorToNdg::thread_imgColor_data_stream_5_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
         !((esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_5_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_6_empty_n.read()))))) {
        imgColor_data_stream_5_read = ap_const_logic_1;
    } else {
        imgColor_data_stream_5_read = ap_const_logic_0;
    }
}

void colorToNdg::thread_imgColor_data_stream_6_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0))) {
        imgColor_data_stream_6_blk_n = imgColor_data_stream_6_empty_n.read();
    } else {
        imgColor_data_stream_6_blk_n = ap_const_logic_1;
    }
}

void colorToNdg::thread_imgColor_data_stream_6_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
         !((esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_5_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_6_empty_n.read()))))) {
        imgColor_data_stream_6_read = ap_const_logic_1;
    } else {
        imgColor_data_stream_6_read = ap_const_logic_0;
    }
}

void colorToNdg::thread_imgColor_data_stream_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0))) {
        imgColor_data_stream_blk_n = imgColor_data_stream_empty_n.read();
    } else {
        imgColor_data_stream_blk_n = ap_const_logic_1;
    }
}

void colorToNdg::thread_imgColor_data_stream_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
         !((esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_5_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_6_empty_n.read()))))) {
        imgColor_data_stream_read = ap_const_logic_1;
    } else {
        imgColor_data_stream_read = ap_const_logic_0;
    }
}

void colorToNdg::thread_imgColor_rows_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        imgColor_rows_V_blk_n = imgColor_rows_V_empty_n.read();
    } else {
        imgColor_rows_V_blk_n = ap_const_logic_1;
    }
}

void colorToNdg::thread_imgColor_rows_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, imgColor_rows_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, imgColor_cols_V_empty_n.read())))) {
        imgColor_rows_V_read = ap_const_logic_1;
    } else {
        imgColor_rows_V_read = ap_const_logic_0;
    }
}

void colorToNdg::thread_imgNdg_data_stream_V() {
    imgNdg_data_stream_V = grp_fu_197_p3.read().range(19, 12);
}

void colorToNdg::thread_imgNdg_data_stream_V_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        imgNdg_data_stream_V_ap_vld = ap_const_logic_1;
    } else {
        imgNdg_data_stream_V_ap_vld = ap_const_logic_0;
    }
}

void colorToNdg::thread_lig_fu_150_p2() {
    lig_fu_150_p2 = (!lig_i_reg_95.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(lig_i_reg_95.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void colorToNdg::thread_tmp_1_i_fu_175_p2() {
    tmp_1_i_fu_175_p2 = (!tmp_8_cast_i_fu_171_p1.read().is_01() || !tmp_7_cast_i_fu_167_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_8_cast_i_fu_171_p1.read()) + sc_biguint<9>(tmp_7_cast_i_fu_167_p1.read()));
}

void colorToNdg::thread_tmp_4_cast_fu_127_p1() {
    tmp_4_cast_fu_127_p1 = esl_sext<32,12>(tmp_4_fu_121_p2.read());
}

void colorToNdg::thread_tmp_4_fu_121_p2() {
    tmp_4_fu_121_p2 = (!tmp_cast_fu_117_p1.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_bigint<12>(tmp_cast_fu_117_p1.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void colorToNdg::thread_tmp_5_cast_fu_131_p1() {
    tmp_5_cast_fu_131_p1 = esl_sext<13,12>(imgColor_rows_V_dout.read());
}

void colorToNdg::thread_tmp_6_cast_fu_141_p1() {
    tmp_6_cast_fu_141_p1 = esl_sext<32,13>(tmp_6_fu_135_p2.read());
}

void colorToNdg::thread_tmp_6_fu_135_p2() {
    tmp_6_fu_135_p2 = (!tmp_5_cast_fu_131_p1.read().is_01() || !ap_const_lv13_1.is_01())? sc_lv<13>(): (sc_bigint<13>(tmp_5_cast_fu_131_p1.read()) + sc_biguint<13>(ap_const_lv13_1));
}

void colorToNdg::thread_tmp_7_cast_i_fu_167_p1() {
    tmp_7_cast_i_fu_167_p1 = esl_zext<9,8>(imgColor_data_stream_dout.read());
}

void colorToNdg::thread_tmp_8_cast_i_fu_171_p1() {
    tmp_8_cast_i_fu_171_p1 = esl_zext<9,8>(imgColor_data_stream_5_dout.read());
}

void colorToNdg::thread_tmp_cast_fu_117_p1() {
    tmp_cast_fu_117_p1 = esl_sext<12,11>(imgColor_cols_V_dout.read());
}

void colorToNdg::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, imgColor_rows_V_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, imgColor_cols_V_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_145_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !((esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_5_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_6_empty_n.read()))) && esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && !((esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_5_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_156_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, imgColor_data_stream_6_empty_n.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

