// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _colorToNdg_HH_
#define _colorToNdg_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "main_am_addmul_9nbkb.h"

namespace ap_rtl {

struct colorToNdg : public sc_module {
    // Port declarations 24
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<12> > imgColor_rows_V_dout;
    sc_in< sc_logic > imgColor_rows_V_empty_n;
    sc_out< sc_logic > imgColor_rows_V_read;
    sc_in< sc_lv<11> > imgColor_cols_V_dout;
    sc_in< sc_logic > imgColor_cols_V_empty_n;
    sc_out< sc_logic > imgColor_cols_V_read;
    sc_in< sc_lv<8> > imgColor_data_stream_dout;
    sc_in< sc_logic > imgColor_data_stream_empty_n;
    sc_out< sc_logic > imgColor_data_stream_read;
    sc_in< sc_lv<8> > imgColor_data_stream_5_dout;
    sc_in< sc_logic > imgColor_data_stream_5_empty_n;
    sc_out< sc_logic > imgColor_data_stream_5_read;
    sc_in< sc_lv<8> > imgColor_data_stream_6_dout;
    sc_in< sc_logic > imgColor_data_stream_6_empty_n;
    sc_out< sc_logic > imgColor_data_stream_6_read;
    sc_out< sc_lv<8> > imgNdg_data_stream_V;
    sc_out< sc_logic > imgNdg_data_stream_V_ap_vld;


    // Module declarations
    colorToNdg(sc_module_name name);
    SC_HAS_PROCESS(colorToNdg);

    ~colorToNdg();

    sc_trace_file* mVcdFile;

    main_am_addmul_9nbkb<1,1,9,8,12,22>* main_am_addmul_9nbkb_U17;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > imgColor_rows_V_blk_n;
    sc_signal< sc_logic > imgColor_cols_V_blk_n;
    sc_signal< sc_logic > imgColor_data_stream_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond_fu_156_p2;
    sc_signal< sc_logic > imgColor_data_stream_5_blk_n;
    sc_signal< sc_logic > imgColor_data_stream_6_blk_n;
    sc_signal< sc_lv<32> > tmp_4_cast_fu_127_p1;
    sc_signal< sc_lv<32> > tmp_4_cast_reg_206;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > tmp_6_cast_fu_141_p1;
    sc_signal< sc_lv<32> > tmp_6_cast_reg_211;
    sc_signal< sc_lv<32> > lig_fu_150_p2;
    sc_signal< sc_lv<32> > lig_reg_219;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > col_fu_161_p2;
    sc_signal< sc_lv<32> > col_reg_227;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_lv<8> > tmp_reg_232;
    sc_signal< sc_lv<9> > tmp_1_i_fu_175_p2;
    sc_signal< sc_lv<9> > tmp_1_i_reg_237;
    sc_signal< sc_lv<32> > lig_i_reg_95;
    sc_signal< sc_lv<32> > col_i_reg_106;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > exitcond1_fu_145_p2;
    sc_signal< sc_lv<12> > tmp_cast_fu_117_p1;
    sc_signal< sc_lv<12> > tmp_4_fu_121_p2;
    sc_signal< sc_lv<13> > tmp_5_cast_fu_131_p1;
    sc_signal< sc_lv<13> > tmp_6_fu_135_p2;
    sc_signal< sc_lv<9> > tmp_8_cast_i_fu_171_p1;
    sc_signal< sc_lv<9> > tmp_7_cast_i_fu_167_p1;
    sc_signal< sc_lv<22> > grp_fu_197_p3;
    sc_signal< sc_lv<9> > grp_fu_197_p0;
    sc_signal< sc_lv<8> > grp_fu_197_p1;
    sc_signal< sc_lv<12> > grp_fu_197_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_lv<10> > grp_fu_197_p00;
    sc_signal< sc_lv<10> > grp_fu_197_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<13> ap_const_lv13_1;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<22> ap_const_lv22_556;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_state1();
    void thread_ap_block_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_col_fu_161_p2();
    void thread_exitcond1_fu_145_p2();
    void thread_exitcond_fu_156_p2();
    void thread_grp_fu_197_p0();
    void thread_grp_fu_197_p00();
    void thread_grp_fu_197_p1();
    void thread_grp_fu_197_p10();
    void thread_grp_fu_197_p2();
    void thread_imgColor_cols_V_blk_n();
    void thread_imgColor_cols_V_read();
    void thread_imgColor_data_stream_5_blk_n();
    void thread_imgColor_data_stream_5_read();
    void thread_imgColor_data_stream_6_blk_n();
    void thread_imgColor_data_stream_6_read();
    void thread_imgColor_data_stream_blk_n();
    void thread_imgColor_data_stream_read();
    void thread_imgColor_rows_V_blk_n();
    void thread_imgColor_rows_V_read();
    void thread_imgNdg_data_stream_V();
    void thread_imgNdg_data_stream_V_ap_vld();
    void thread_lig_fu_150_p2();
    void thread_tmp_1_i_fu_175_p2();
    void thread_tmp_4_cast_fu_127_p1();
    void thread_tmp_4_fu_121_p2();
    void thread_tmp_5_cast_fu_131_p1();
    void thread_tmp_6_cast_fu_141_p1();
    void thread_tmp_6_fu_135_p2();
    void thread_tmp_7_cast_i_fu_167_p1();
    void thread_tmp_8_cast_i_fu_171_p1();
    void thread_tmp_cast_fu_117_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
