// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "main.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const int main::C_S_AXI_DATA_WIDTH = "100000";
const int main::C_S_AXI_WSTRB_WIDTH = "100";
const int main::C_S_AXI_ADDR_WIDTH = "100000";
const sc_logic main::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic main::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<32> main::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> main::ap_const_lv32_1 = "1";
const sc_lv<24> main::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<24> main::ap_const_lv24_1 = "1";
const sc_lv<3> main::ap_const_lv3_0 = "000";
const sc_lv<3> main::ap_const_lv3_1 = "1";
const sc_lv<1> main::ap_const_lv1_0 = "0";
const sc_lv<1> main::ap_const_lv1_1 = "1";

main::main(sc_module_name name) : sc_module(name), mVcdFile(0) {
    main_CONTROL_BUS_s_axi_U = new main_CONTROL_BUS_s_axi<C_S_AXI_CONTROL_BUS_ADDR_WIDTH,C_S_AXI_CONTROL_BUS_DATA_WIDTH>("main_CONTROL_BUS_s_axi_U");
    main_CONTROL_BUS_s_axi_U->AWVALID(s_axi_CONTROL_BUS_AWVALID);
    main_CONTROL_BUS_s_axi_U->AWREADY(s_axi_CONTROL_BUS_AWREADY);
    main_CONTROL_BUS_s_axi_U->AWADDR(s_axi_CONTROL_BUS_AWADDR);
    main_CONTROL_BUS_s_axi_U->WVALID(s_axi_CONTROL_BUS_WVALID);
    main_CONTROL_BUS_s_axi_U->WREADY(s_axi_CONTROL_BUS_WREADY);
    main_CONTROL_BUS_s_axi_U->WDATA(s_axi_CONTROL_BUS_WDATA);
    main_CONTROL_BUS_s_axi_U->WSTRB(s_axi_CONTROL_BUS_WSTRB);
    main_CONTROL_BUS_s_axi_U->ARVALID(s_axi_CONTROL_BUS_ARVALID);
    main_CONTROL_BUS_s_axi_U->ARREADY(s_axi_CONTROL_BUS_ARREADY);
    main_CONTROL_BUS_s_axi_U->ARADDR(s_axi_CONTROL_BUS_ARADDR);
    main_CONTROL_BUS_s_axi_U->RVALID(s_axi_CONTROL_BUS_RVALID);
    main_CONTROL_BUS_s_axi_U->RREADY(s_axi_CONTROL_BUS_RREADY);
    main_CONTROL_BUS_s_axi_U->RDATA(s_axi_CONTROL_BUS_RDATA);
    main_CONTROL_BUS_s_axi_U->RRESP(s_axi_CONTROL_BUS_RRESP);
    main_CONTROL_BUS_s_axi_U->BVALID(s_axi_CONTROL_BUS_BVALID);
    main_CONTROL_BUS_s_axi_U->BREADY(s_axi_CONTROL_BUS_BREADY);
    main_CONTROL_BUS_s_axi_U->BRESP(s_axi_CONTROL_BUS_BRESP);
    main_CONTROL_BUS_s_axi_U->ACLK(ap_clk);
    main_CONTROL_BUS_s_axi_U->ARESET(ap_rst_n_inv);
    main_CONTROL_BUS_s_axi_U->ACLK_EN(ap_var_for_const0);
    main_CONTROL_BUS_s_axi_U->ap_start(ap_start);
    main_CONTROL_BUS_s_axi_U->interrupt(interrupt);
    main_CONTROL_BUS_s_axi_U->ap_ready(ap_ready);
    main_CONTROL_BUS_s_axi_U->ap_done(ap_done);
    main_CONTROL_BUS_s_axi_U->ap_idle(ap_idle);
    main_CONTROL_BUS_s_axi_U->ap_return(ap_var_for_const1);
    Block_proc_U0 = new Block_proc("Block_proc_U0");
    Block_proc_U0->ap_clk(ap_clk);
    Block_proc_U0->ap_rst(ap_rst_n_inv);
    Block_proc_U0->ap_start(Block_proc_U0_ap_start);
    Block_proc_U0->ap_done(Block_proc_U0_ap_done);
    Block_proc_U0->ap_continue(Block_proc_U0_ap_continue);
    Block_proc_U0->ap_idle(Block_proc_U0_ap_idle);
    Block_proc_U0->ap_ready(Block_proc_U0_ap_ready);
    Block_proc_U0->imgColor_rows_V_out_din(Block_proc_U0_imgColor_rows_V_out_din);
    Block_proc_U0->imgColor_rows_V_out_full_n(imgColor_rows_V_c_full_n);
    Block_proc_U0->imgColor_rows_V_out_write(Block_proc_U0_imgColor_rows_V_out_write);
    Block_proc_U0->imgColor_cols_V_out_din(Block_proc_U0_imgColor_cols_V_out_din);
    Block_proc_U0->imgColor_cols_V_out_full_n(imgColor_cols_V_c_full_n);
    Block_proc_U0->imgColor_cols_V_out_write(Block_proc_U0_imgColor_cols_V_out_write);
    AXIvideo2Mat_U0 = new AXIvideo2Mat("AXIvideo2Mat_U0");
    AXIvideo2Mat_U0->ap_clk(ap_clk);
    AXIvideo2Mat_U0->ap_rst(ap_rst_n_inv);
    AXIvideo2Mat_U0->ap_start(AXIvideo2Mat_U0_ap_start);
    AXIvideo2Mat_U0->ap_done(AXIvideo2Mat_U0_ap_done);
    AXIvideo2Mat_U0->ap_continue(AXIvideo2Mat_U0_ap_continue);
    AXIvideo2Mat_U0->ap_idle(AXIvideo2Mat_U0_ap_idle);
    AXIvideo2Mat_U0->ap_ready(AXIvideo2Mat_U0_ap_ready);
    AXIvideo2Mat_U0->AXI_video_strm_V_data_V(ap_var_for_const2);
    AXIvideo2Mat_U0->AXI_video_strm_V_keep_V(ap_var_for_const3);
    AXIvideo2Mat_U0->AXI_video_strm_V_strb_V(ap_var_for_const3);
    AXIvideo2Mat_U0->AXI_video_strm_V_user_V(ap_var_for_const4);
    AXIvideo2Mat_U0->AXI_video_strm_V_last_V(ap_var_for_const4);
    AXIvideo2Mat_U0->AXI_video_strm_V_id_V(ap_var_for_const4);
    AXIvideo2Mat_U0->AXI_video_strm_V_dest_V(ap_var_for_const4);
    AXIvideo2Mat_U0->img_rows_V_dout(imgColor_rows_V_c_dout);
    AXIvideo2Mat_U0->img_rows_V_empty_n(imgColor_rows_V_c_empty_n);
    AXIvideo2Mat_U0->img_rows_V_read(AXIvideo2Mat_U0_img_rows_V_read);
    AXIvideo2Mat_U0->img_cols_V_dout(imgColor_cols_V_c_dout);
    AXIvideo2Mat_U0->img_cols_V_empty_n(imgColor_cols_V_c_empty_n);
    AXIvideo2Mat_U0->img_cols_V_read(AXIvideo2Mat_U0_img_cols_V_read);
    AXIvideo2Mat_U0->img_data_stream_0_V_din(AXIvideo2Mat_U0_img_data_stream_0_V_din);
    AXIvideo2Mat_U0->img_data_stream_0_V_full_n(imgColor_data_stream_full_n);
    AXIvideo2Mat_U0->img_data_stream_0_V_write(AXIvideo2Mat_U0_img_data_stream_0_V_write);
    AXIvideo2Mat_U0->img_data_stream_1_V_din(AXIvideo2Mat_U0_img_data_stream_1_V_din);
    AXIvideo2Mat_U0->img_data_stream_1_V_full_n(imgColor_data_stream_1_full_n);
    AXIvideo2Mat_U0->img_data_stream_1_V_write(AXIvideo2Mat_U0_img_data_stream_1_V_write);
    AXIvideo2Mat_U0->img_data_stream_2_V_din(AXIvideo2Mat_U0_img_data_stream_2_V_din);
    AXIvideo2Mat_U0->img_data_stream_2_V_full_n(imgColor_data_stream_2_full_n);
    AXIvideo2Mat_U0->img_data_stream_2_V_write(AXIvideo2Mat_U0_img_data_stream_2_V_write);
    AXIvideo2Mat_U0->img_rows_V_out_din(AXIvideo2Mat_U0_img_rows_V_out_din);
    AXIvideo2Mat_U0->img_rows_V_out_full_n(imgColor_rows_V_c40_full_n);
    AXIvideo2Mat_U0->img_rows_V_out_write(AXIvideo2Mat_U0_img_rows_V_out_write);
    AXIvideo2Mat_U0->img_cols_V_out_din(AXIvideo2Mat_U0_img_cols_V_out_din);
    AXIvideo2Mat_U0->img_cols_V_out_full_n(imgColor_cols_V_c41_full_n);
    AXIvideo2Mat_U0->img_cols_V_out_write(AXIvideo2Mat_U0_img_cols_V_out_write);
    colorToNdg_U0 = new colorToNdg("colorToNdg_U0");
    colorToNdg_U0->ap_clk(ap_clk);
    colorToNdg_U0->ap_rst(ap_rst_n_inv);
    colorToNdg_U0->ap_start(colorToNdg_U0_ap_start);
    colorToNdg_U0->ap_done(colorToNdg_U0_ap_done);
    colorToNdg_U0->ap_continue(colorToNdg_U0_ap_continue);
    colorToNdg_U0->ap_idle(colorToNdg_U0_ap_idle);
    colorToNdg_U0->ap_ready(colorToNdg_U0_ap_ready);
    colorToNdg_U0->imgColor_rows_V_dout(imgColor_rows_V_c40_dout);
    colorToNdg_U0->imgColor_rows_V_empty_n(imgColor_rows_V_c40_empty_n);
    colorToNdg_U0->imgColor_rows_V_read(colorToNdg_U0_imgColor_rows_V_read);
    colorToNdg_U0->imgColor_cols_V_dout(imgColor_cols_V_c41_dout);
    colorToNdg_U0->imgColor_cols_V_empty_n(imgColor_cols_V_c41_empty_n);
    colorToNdg_U0->imgColor_cols_V_read(colorToNdg_U0_imgColor_cols_V_read);
    colorToNdg_U0->imgColor_data_stream_dout(imgColor_data_stream_dout);
    colorToNdg_U0->imgColor_data_stream_empty_n(imgColor_data_stream_empty_n);
    colorToNdg_U0->imgColor_data_stream_read(colorToNdg_U0_imgColor_data_stream_read);
    colorToNdg_U0->imgColor_data_stream_5_dout(imgColor_data_stream_1_dout);
    colorToNdg_U0->imgColor_data_stream_5_empty_n(imgColor_data_stream_1_empty_n);
    colorToNdg_U0->imgColor_data_stream_5_read(colorToNdg_U0_imgColor_data_stream_5_read);
    colorToNdg_U0->imgColor_data_stream_6_dout(imgColor_data_stream_2_dout);
    colorToNdg_U0->imgColor_data_stream_6_empty_n(imgColor_data_stream_2_empty_n);
    colorToNdg_U0->imgColor_data_stream_6_read(colorToNdg_U0_imgColor_data_stream_6_read);
    colorToNdg_U0->imgNdg_data_stream_V(colorToNdg_U0_imgNdg_data_stream_V);
    colorToNdg_U0->imgNdg_data_stream_V_ap_vld(colorToNdg_U0_imgNdg_data_stream_V_ap_vld);
    imgColor_rows_V_c_U = new fifo_w12_d1_A("imgColor_rows_V_c_U");
    imgColor_rows_V_c_U->clk(ap_clk);
    imgColor_rows_V_c_U->reset(ap_rst_n_inv);
    imgColor_rows_V_c_U->if_read_ce(ap_var_for_const0);
    imgColor_rows_V_c_U->if_write_ce(ap_var_for_const0);
    imgColor_rows_V_c_U->if_din(Block_proc_U0_imgColor_rows_V_out_din);
    imgColor_rows_V_c_U->if_full_n(imgColor_rows_V_c_full_n);
    imgColor_rows_V_c_U->if_write(Block_proc_U0_imgColor_rows_V_out_write);
    imgColor_rows_V_c_U->if_dout(imgColor_rows_V_c_dout);
    imgColor_rows_V_c_U->if_empty_n(imgColor_rows_V_c_empty_n);
    imgColor_rows_V_c_U->if_read(AXIvideo2Mat_U0_img_rows_V_read);
    imgColor_cols_V_c_U = new fifo_w11_d1_A("imgColor_cols_V_c_U");
    imgColor_cols_V_c_U->clk(ap_clk);
    imgColor_cols_V_c_U->reset(ap_rst_n_inv);
    imgColor_cols_V_c_U->if_read_ce(ap_var_for_const0);
    imgColor_cols_V_c_U->if_write_ce(ap_var_for_const0);
    imgColor_cols_V_c_U->if_din(Block_proc_U0_imgColor_cols_V_out_din);
    imgColor_cols_V_c_U->if_full_n(imgColor_cols_V_c_full_n);
    imgColor_cols_V_c_U->if_write(Block_proc_U0_imgColor_cols_V_out_write);
    imgColor_cols_V_c_U->if_dout(imgColor_cols_V_c_dout);
    imgColor_cols_V_c_U->if_empty_n(imgColor_cols_V_c_empty_n);
    imgColor_cols_V_c_U->if_read(AXIvideo2Mat_U0_img_cols_V_read);
    imgColor_data_stream_U = new fifo_w8_d1_A("imgColor_data_stream_U");
    imgColor_data_stream_U->clk(ap_clk);
    imgColor_data_stream_U->reset(ap_rst_n_inv);
    imgColor_data_stream_U->if_read_ce(ap_var_for_const0);
    imgColor_data_stream_U->if_write_ce(ap_var_for_const0);
    imgColor_data_stream_U->if_din(AXIvideo2Mat_U0_img_data_stream_0_V_din);
    imgColor_data_stream_U->if_full_n(imgColor_data_stream_full_n);
    imgColor_data_stream_U->if_write(AXIvideo2Mat_U0_img_data_stream_0_V_write);
    imgColor_data_stream_U->if_dout(imgColor_data_stream_dout);
    imgColor_data_stream_U->if_empty_n(imgColor_data_stream_empty_n);
    imgColor_data_stream_U->if_read(colorToNdg_U0_imgColor_data_stream_read);
    imgColor_data_stream_1_U = new fifo_w8_d1_A("imgColor_data_stream_1_U");
    imgColor_data_stream_1_U->clk(ap_clk);
    imgColor_data_stream_1_U->reset(ap_rst_n_inv);
    imgColor_data_stream_1_U->if_read_ce(ap_var_for_const0);
    imgColor_data_stream_1_U->if_write_ce(ap_var_for_const0);
    imgColor_data_stream_1_U->if_din(AXIvideo2Mat_U0_img_data_stream_1_V_din);
    imgColor_data_stream_1_U->if_full_n(imgColor_data_stream_1_full_n);
    imgColor_data_stream_1_U->if_write(AXIvideo2Mat_U0_img_data_stream_1_V_write);
    imgColor_data_stream_1_U->if_dout(imgColor_data_stream_1_dout);
    imgColor_data_stream_1_U->if_empty_n(imgColor_data_stream_1_empty_n);
    imgColor_data_stream_1_U->if_read(colorToNdg_U0_imgColor_data_stream_5_read);
    imgColor_data_stream_2_U = new fifo_w8_d1_A("imgColor_data_stream_2_U");
    imgColor_data_stream_2_U->clk(ap_clk);
    imgColor_data_stream_2_U->reset(ap_rst_n_inv);
    imgColor_data_stream_2_U->if_read_ce(ap_var_for_const0);
    imgColor_data_stream_2_U->if_write_ce(ap_var_for_const0);
    imgColor_data_stream_2_U->if_din(AXIvideo2Mat_U0_img_data_stream_2_V_din);
    imgColor_data_stream_2_U->if_full_n(imgColor_data_stream_2_full_n);
    imgColor_data_stream_2_U->if_write(AXIvideo2Mat_U0_img_data_stream_2_V_write);
    imgColor_data_stream_2_U->if_dout(imgColor_data_stream_2_dout);
    imgColor_data_stream_2_U->if_empty_n(imgColor_data_stream_2_empty_n);
    imgColor_data_stream_2_U->if_read(colorToNdg_U0_imgColor_data_stream_6_read);
    imgColor_rows_V_c40_U = new fifo_w12_d1_A("imgColor_rows_V_c40_U");
    imgColor_rows_V_c40_U->clk(ap_clk);
    imgColor_rows_V_c40_U->reset(ap_rst_n_inv);
    imgColor_rows_V_c40_U->if_read_ce(ap_var_for_const0);
    imgColor_rows_V_c40_U->if_write_ce(ap_var_for_const0);
    imgColor_rows_V_c40_U->if_din(AXIvideo2Mat_U0_img_rows_V_out_din);
    imgColor_rows_V_c40_U->if_full_n(imgColor_rows_V_c40_full_n);
    imgColor_rows_V_c40_U->if_write(AXIvideo2Mat_U0_img_rows_V_out_write);
    imgColor_rows_V_c40_U->if_dout(imgColor_rows_V_c40_dout);
    imgColor_rows_V_c40_U->if_empty_n(imgColor_rows_V_c40_empty_n);
    imgColor_rows_V_c40_U->if_read(colorToNdg_U0_imgColor_rows_V_read);
    imgColor_cols_V_c41_U = new fifo_w11_d1_A("imgColor_cols_V_c41_U");
    imgColor_cols_V_c41_U->clk(ap_clk);
    imgColor_cols_V_c41_U->reset(ap_rst_n_inv);
    imgColor_cols_V_c41_U->if_read_ce(ap_var_for_const0);
    imgColor_cols_V_c41_U->if_write_ce(ap_var_for_const0);
    imgColor_cols_V_c41_U->if_din(AXIvideo2Mat_U0_img_cols_V_out_din);
    imgColor_cols_V_c41_U->if_full_n(imgColor_cols_V_c41_full_n);
    imgColor_cols_V_c41_U->if_write(AXIvideo2Mat_U0_img_cols_V_out_write);
    imgColor_cols_V_c41_U->if_dout(imgColor_cols_V_c41_dout);
    imgColor_cols_V_c41_U->if_empty_n(imgColor_cols_V_c41_empty_n);
    imgColor_cols_V_c41_U->if_read(colorToNdg_U0_imgColor_cols_V_read);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_AXIvideo2Mat_U0_ap_continue);

    SC_METHOD(thread_AXIvideo2Mat_U0_ap_start);

    SC_METHOD(thread_AXIvideo2Mat_U0_start_full_n);

    SC_METHOD(thread_AXIvideo2Mat_U0_start_write);

    SC_METHOD(thread_Block_proc_U0_ap_continue);

    SC_METHOD(thread_Block_proc_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_Block_proc_U0_start_full_n);

    SC_METHOD(thread_Block_proc_U0_start_write);

    SC_METHOD(thread_ap_done);

    SC_METHOD(thread_ap_idle);
    sensitive << ( Block_proc_U0_ap_idle );
    sensitive << ( AXIvideo2Mat_U0_ap_idle );
    sensitive << ( colorToNdg_U0_ap_idle );

    SC_METHOD(thread_ap_ready);

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_continue);
    sensitive << ( ap_sync_done );

    SC_METHOD(thread_ap_sync_done);

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( ap_sync_done );

    SC_METHOD(thread_colorToNdg_U0_ap_continue);

    SC_METHOD(thread_colorToNdg_U0_start_full_n);

    SC_METHOD(thread_colorToNdg_U0_start_write);

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    colorToNdg_U0_ap_start = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "main_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_AWVALID, "(port)s_axi_CONTROL_BUS_AWVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_AWREADY, "(port)s_axi_CONTROL_BUS_AWREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_AWADDR, "(port)s_axi_CONTROL_BUS_AWADDR");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_WVALID, "(port)s_axi_CONTROL_BUS_WVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_WREADY, "(port)s_axi_CONTROL_BUS_WREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_WDATA, "(port)s_axi_CONTROL_BUS_WDATA");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_WSTRB, "(port)s_axi_CONTROL_BUS_WSTRB");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_ARVALID, "(port)s_axi_CONTROL_BUS_ARVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_ARREADY, "(port)s_axi_CONTROL_BUS_ARREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_ARADDR, "(port)s_axi_CONTROL_BUS_ARADDR");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_RVALID, "(port)s_axi_CONTROL_BUS_RVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_RREADY, "(port)s_axi_CONTROL_BUS_RREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_RDATA, "(port)s_axi_CONTROL_BUS_RDATA");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_RRESP, "(port)s_axi_CONTROL_BUS_RRESP");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_BVALID, "(port)s_axi_CONTROL_BUS_BVALID");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_BREADY, "(port)s_axi_CONTROL_BUS_BREADY");
    sc_trace(mVcdFile, s_axi_CONTROL_BUS_BRESP, "(port)s_axi_CONTROL_BUS_BRESP");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, Block_proc_U0_ap_start, "Block_proc_U0_ap_start");
    sc_trace(mVcdFile, Block_proc_U0_ap_done, "Block_proc_U0_ap_done");
    sc_trace(mVcdFile, Block_proc_U0_ap_continue, "Block_proc_U0_ap_continue");
    sc_trace(mVcdFile, Block_proc_U0_ap_idle, "Block_proc_U0_ap_idle");
    sc_trace(mVcdFile, Block_proc_U0_ap_ready, "Block_proc_U0_ap_ready");
    sc_trace(mVcdFile, Block_proc_U0_imgColor_rows_V_out_din, "Block_proc_U0_imgColor_rows_V_out_din");
    sc_trace(mVcdFile, Block_proc_U0_imgColor_rows_V_out_write, "Block_proc_U0_imgColor_rows_V_out_write");
    sc_trace(mVcdFile, Block_proc_U0_imgColor_cols_V_out_din, "Block_proc_U0_imgColor_cols_V_out_din");
    sc_trace(mVcdFile, Block_proc_U0_imgColor_cols_V_out_write, "Block_proc_U0_imgColor_cols_V_out_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_start, "AXIvideo2Mat_U0_ap_start");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_done, "AXIvideo2Mat_U0_ap_done");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_continue, "AXIvideo2Mat_U0_ap_continue");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_idle, "AXIvideo2Mat_U0_ap_idle");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_ap_ready, "AXIvideo2Mat_U0_ap_ready");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_rows_V_read, "AXIvideo2Mat_U0_img_rows_V_read");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_cols_V_read, "AXIvideo2Mat_U0_img_cols_V_read");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_0_V_din, "AXIvideo2Mat_U0_img_data_stream_0_V_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_0_V_write, "AXIvideo2Mat_U0_img_data_stream_0_V_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_1_V_din, "AXIvideo2Mat_U0_img_data_stream_1_V_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_1_V_write, "AXIvideo2Mat_U0_img_data_stream_1_V_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_2_V_din, "AXIvideo2Mat_U0_img_data_stream_2_V_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_data_stream_2_V_write, "AXIvideo2Mat_U0_img_data_stream_2_V_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_rows_V_out_din, "AXIvideo2Mat_U0_img_rows_V_out_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_rows_V_out_write, "AXIvideo2Mat_U0_img_rows_V_out_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_cols_V_out_din, "AXIvideo2Mat_U0_img_cols_V_out_din");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_img_cols_V_out_write, "AXIvideo2Mat_U0_img_cols_V_out_write");
    sc_trace(mVcdFile, colorToNdg_U0_ap_start, "colorToNdg_U0_ap_start");
    sc_trace(mVcdFile, colorToNdg_U0_ap_done, "colorToNdg_U0_ap_done");
    sc_trace(mVcdFile, colorToNdg_U0_ap_continue, "colorToNdg_U0_ap_continue");
    sc_trace(mVcdFile, colorToNdg_U0_ap_idle, "colorToNdg_U0_ap_idle");
    sc_trace(mVcdFile, colorToNdg_U0_ap_ready, "colorToNdg_U0_ap_ready");
    sc_trace(mVcdFile, colorToNdg_U0_imgColor_rows_V_read, "colorToNdg_U0_imgColor_rows_V_read");
    sc_trace(mVcdFile, colorToNdg_U0_imgColor_cols_V_read, "colorToNdg_U0_imgColor_cols_V_read");
    sc_trace(mVcdFile, colorToNdg_U0_imgColor_data_stream_read, "colorToNdg_U0_imgColor_data_stream_read");
    sc_trace(mVcdFile, colorToNdg_U0_imgColor_data_stream_5_read, "colorToNdg_U0_imgColor_data_stream_5_read");
    sc_trace(mVcdFile, colorToNdg_U0_imgColor_data_stream_6_read, "colorToNdg_U0_imgColor_data_stream_6_read");
    sc_trace(mVcdFile, colorToNdg_U0_imgNdg_data_stream_V, "colorToNdg_U0_imgNdg_data_stream_V");
    sc_trace(mVcdFile, colorToNdg_U0_imgNdg_data_stream_V_ap_vld, "colorToNdg_U0_imgNdg_data_stream_V_ap_vld");
    sc_trace(mVcdFile, imgColor_rows_V_c_full_n, "imgColor_rows_V_c_full_n");
    sc_trace(mVcdFile, imgColor_rows_V_c_dout, "imgColor_rows_V_c_dout");
    sc_trace(mVcdFile, imgColor_rows_V_c_empty_n, "imgColor_rows_V_c_empty_n");
    sc_trace(mVcdFile, imgColor_cols_V_c_full_n, "imgColor_cols_V_c_full_n");
    sc_trace(mVcdFile, imgColor_cols_V_c_dout, "imgColor_cols_V_c_dout");
    sc_trace(mVcdFile, imgColor_cols_V_c_empty_n, "imgColor_cols_V_c_empty_n");
    sc_trace(mVcdFile, imgColor_data_stream_full_n, "imgColor_data_stream_full_n");
    sc_trace(mVcdFile, imgColor_data_stream_dout, "imgColor_data_stream_dout");
    sc_trace(mVcdFile, imgColor_data_stream_empty_n, "imgColor_data_stream_empty_n");
    sc_trace(mVcdFile, imgColor_data_stream_1_full_n, "imgColor_data_stream_1_full_n");
    sc_trace(mVcdFile, imgColor_data_stream_1_dout, "imgColor_data_stream_1_dout");
    sc_trace(mVcdFile, imgColor_data_stream_1_empty_n, "imgColor_data_stream_1_empty_n");
    sc_trace(mVcdFile, imgColor_data_stream_2_full_n, "imgColor_data_stream_2_full_n");
    sc_trace(mVcdFile, imgColor_data_stream_2_dout, "imgColor_data_stream_2_dout");
    sc_trace(mVcdFile, imgColor_data_stream_2_empty_n, "imgColor_data_stream_2_empty_n");
    sc_trace(mVcdFile, imgColor_rows_V_c40_full_n, "imgColor_rows_V_c40_full_n");
    sc_trace(mVcdFile, imgColor_rows_V_c40_dout, "imgColor_rows_V_c40_dout");
    sc_trace(mVcdFile, imgColor_rows_V_c40_empty_n, "imgColor_rows_V_c40_empty_n");
    sc_trace(mVcdFile, imgColor_cols_V_c41_full_n, "imgColor_cols_V_c41_full_n");
    sc_trace(mVcdFile, imgColor_cols_V_c41_dout, "imgColor_cols_V_c41_dout");
    sc_trace(mVcdFile, imgColor_cols_V_c41_empty_n, "imgColor_cols_V_c41_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, Block_proc_U0_start_full_n, "Block_proc_U0_start_full_n");
    sc_trace(mVcdFile, Block_proc_U0_start_write, "Block_proc_U0_start_write");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_start_full_n, "AXIvideo2Mat_U0_start_full_n");
    sc_trace(mVcdFile, AXIvideo2Mat_U0_start_write, "AXIvideo2Mat_U0_start_write");
    sc_trace(mVcdFile, colorToNdg_U0_start_full_n, "colorToNdg_U0_start_full_n");
    sc_trace(mVcdFile, colorToNdg_U0_start_write, "colorToNdg_U0_start_write");
    sc_trace(mVcdFile, ap_return, "ap_return");
#endif

    }
    mHdltvinHandle.open("main.hdltvin.dat");
    mHdltvoutHandle.open("main.hdltvout.dat");
}

main::~main() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete main_CONTROL_BUS_s_axi_U;
    delete Block_proc_U0;
    delete AXIvideo2Mat_U0;
    delete colorToNdg_U0;
    delete imgColor_rows_V_c_U;
    delete imgColor_cols_V_c_U;
    delete imgColor_data_stream_U;
    delete imgColor_data_stream_1_U;
    delete imgColor_data_stream_2_U;
    delete imgColor_rows_V_c40_U;
    delete imgColor_cols_V_c41_U;
}

void main::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void main::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void main::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv24_0;
}

void main::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv3_0;
}

void main::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv1_0;
}

void main::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        colorToNdg_U0_ap_start = ap_const_logic_0;
    } else {
        colorToNdg_U0_ap_start = ap_const_logic_1;
    }
}

void main::thread_AXIvideo2Mat_U0_ap_continue() {
    AXIvideo2Mat_U0_ap_continue = ap_const_logic_1;
}

void main::thread_AXIvideo2Mat_U0_ap_start() {
    AXIvideo2Mat_U0_ap_start = ap_const_logic_1;
}

void main::thread_AXIvideo2Mat_U0_start_full_n() {
    AXIvideo2Mat_U0_start_full_n = ap_const_logic_1;
}

void main::thread_AXIvideo2Mat_U0_start_write() {
    AXIvideo2Mat_U0_start_write = ap_const_logic_0;
}

void main::thread_Block_proc_U0_ap_continue() {
    Block_proc_U0_ap_continue = ap_const_logic_1;
}

void main::thread_Block_proc_U0_ap_start() {
    Block_proc_U0_ap_start = ap_start.read();
}

void main::thread_Block_proc_U0_start_full_n() {
    Block_proc_U0_start_full_n = ap_const_logic_1;
}

void main::thread_Block_proc_U0_start_write() {
    Block_proc_U0_start_write = ap_const_logic_0;
}

void main::thread_ap_done() {
    ap_done = ap_const_logic_1;
}

void main::thread_ap_idle() {
    ap_idle = (Block_proc_U0_ap_idle.read() & AXIvideo2Mat_U0_ap_idle.read() & colorToNdg_U0_ap_idle.read());
}

void main::thread_ap_ready() {
    ap_ready = ap_const_logic_1;
}

void main::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void main::thread_ap_sync_continue() {
    ap_sync_continue = ap_sync_done.read();
}

void main::thread_ap_sync_done() {
    ap_sync_done = ap_const_logic_1;
}

void main::thread_ap_sync_ready() {
    ap_sync_ready = ap_sync_done.read();
}

void main::thread_colorToNdg_U0_ap_continue() {
    colorToNdg_U0_ap_continue = ap_const_logic_1;
}

void main::thread_colorToNdg_U0_start_full_n() {
    colorToNdg_U0_start_full_n = ap_const_logic_1;
}

void main::thread_colorToNdg_U0_start_write() {
    colorToNdg_U0_start_write = ap_const_logic_0;
}

void main::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"s_axi_CONTROL_BUS_AWVALID\" :  \"" << s_axi_CONTROL_BUS_AWVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"s_axi_CONTROL_BUS_AWREADY\" :  \"" << s_axi_CONTROL_BUS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_AWADDR\" :  \"" << s_axi_CONTROL_BUS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_WVALID\" :  \"" << s_axi_CONTROL_BUS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_WREADY\" :  \"" << s_axi_CONTROL_BUS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_WDATA\" :  \"" << s_axi_CONTROL_BUS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_WSTRB\" :  \"" << s_axi_CONTROL_BUS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_ARVALID\" :  \"" << s_axi_CONTROL_BUS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_ARREADY\" :  \"" << s_axi_CONTROL_BUS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_ARADDR\" :  \"" << s_axi_CONTROL_BUS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_RVALID\" :  \"" << s_axi_CONTROL_BUS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_RREADY\" :  \"" << s_axi_CONTROL_BUS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_RDATA\" :  \"" << s_axi_CONTROL_BUS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_RRESP\" :  \"" << s_axi_CONTROL_BUS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_BVALID\" :  \"" << s_axi_CONTROL_BUS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_CONTROL_BUS_BREADY\" :  \"" << s_axi_CONTROL_BUS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_CONTROL_BUS_BRESP\" :  \"" << s_axi_CONTROL_BUS_BRESP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

